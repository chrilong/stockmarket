{"insightID":"a34254aa-6e39-42b3-8c3a-2fdd2de73885","pixelReturn":[{"pixelExpression":"CachedPanel ( \"0\" ) ;","isMeta":false,"output":{"panelId":"0","panelLabel":"Explore a Stock","view":"default-handle","viewOptions":"{\"param\":true,\"json\":[{\"query\":\"## Import the Data ## Database ( database = [ \\\"2f1deb90-aa70-4445-80c2-9fcdc28398da\\\" ] ) | Select ( JSON_PLACEHOLDER__beta , JSON_PLACEHOLDER__ceo , JSON_PLACEHOLDER__changes , JSON_PLACEHOLDER__changesPercentage , JSON_PLACEHOLDER__companyName , JSON_PLACEHOLDER__description , JSON_PLACEHOLDER__exchange , JSON_PLACEHOLDER__image , JSON_PLACEHOLDER__lastDiv , JSON_PLACEHOLDER__mktCap , JSON_PLACEHOLDER__price , JSON_PLACEHOLDER__range , JSON_PLACEHOLDER__sector , JSON_PLACEHOLDER__volAvg , JSON_PLACEHOLDER__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , volAvg , website ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME441315\\\" ] ) ] ) ; Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__WEEKLY_DATA_UNIQUE_ROW_ID , WEEKLY_DATA__close , WEEKLY_DATA__high , WEEKLY_DATA__low , WEEKLY_DATA__open , WEEKLY_DATA__timestamp , WEEKLY_DATA__volume ) .as ( [ Symbol , WEEKLY_DATA_UNIQUE_ROW_ID , close , high , low , open , timestamp , volume ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME330298\\\" ] ) ] ) ; FRAME441315 | Convert ( frameType = [ R ] ) ; FRAME441315 | AddColumn ( newCol = [ \\\"Symbol\\\" ] , dataType = [ \\\"STRING\\\" ] ) ; FRAME441315 | UpdateRowValues ( Symbol , \\\"<stock>\\\" , Filter ( ( beta > \\\"-100\\\" ) ) ) ; Frame ( FRAME441315 ) | Select ( FRAME441315__beta , FRAME441315__ceo , FRAME441315__changes , FRAME441315__changesPercentage , FRAME441315__companyName , FRAME441315__description , FRAME441315__exchange , FRAME441315__image , FRAME441315__lastDiv , FRAME441315__mktCap , FRAME441315__price , FRAME441315__range , FRAME441315__sector , FRAME441315__Symbol , FRAME441315__volAvg , FRAME441315__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , Symbol , volAvg , website ] ) | Merge ( joins = [ ( Symbol , inner.join , Symbol ) ] , frame = [ FRAME330298 ] ) ; RemoveFrame ( \\\"FRAME441315\\\" ) ; ## Search for Twitter ## Frame ( FRAME330298 ) | Select ( companyName ) | FlatMapLambda ( lambda = [ \\\"twittersearch\\\" ] , columns = [ \\\"companyName\\\" ] , params = [ { \\\"output\\\" : \\\"100\\\" , \\\"result_type\\\" : \\\"Mixed\\\" , \\\"geo_code\\\" : \\\"\\\" } ] ) | Merge ( joins = [ ( companyName , inner.join , companyName ) ] , frame = [ FRAME330298 ] ) ; ## Run Sentiment on the Tweets ## Frame ( FRAME330298 ) | Select ( review ) | FlatMapLambda ( lambda = [ \\\"googlesentiment\\\" ] , columns = [ \\\"review\\\" ] ) | Merge ( joins = [ ( review , inner.join , review ) ] , frame = [ FRAME330298 ] ) ; ## Visualize ## if ( ( FRAME330298 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"Average_of_open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  if ( ( FRAME330298 | HasDuplicates ( companyName ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , Average ( score ) ) .as ( [ companyName , Average_of_score ] ) | Group ( companyName ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"companyName\\\" ] , \\\"value\\\" : [ \\\"Average_of_score\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , score ) .as ( [ companyName , score ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"companyName\\\" ] , \\\"value\\\" : [ \\\"score\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"minMax\\\" : { \\\"min\\\" : { \\\"show\\\" : true , \\\"value\\\" : - 1 } , \\\"max\\\" : { \\\"show\\\" : true , \\\"value\\\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1); today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1); Panel ( 3 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div id=\\\\\\\"projectFacts\\\\\\\" class=\\\\\\\"sectionClass\\\\\\\">\\n    <div class=\\\\\\\"fullWidth eight columns\\\\\\\">\\n        <div class=\\\\\\\"projectFactsWrap \\\\\\\">\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"5\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number1\\\\\\\" class=\\\\\\\"number\\\\\\\"><a href='{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][1]}}'>{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0]}}</a></p>\\n                <span></span>\\n                <p>Symbol (Control-Click)</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"77\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number2\\\\\\\" class=\\\\\\\"number\\\\\\\">${{curQuote[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number:2}}</p>\\n                <span></span>\\n                <p>Quote</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"1988\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number3\\\\\\\" class=\\\\\\\"number\\\\\\\">{{yearAgo[0][\\\\\\\"output\\\\\\\"] | number:1}}%</p>\\n                <span></span>\\n                <p>Last 12 Month Performance</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number4\\\\\\\" class=\\\\\\\"number\\\\\\\">{{weekAgo[0][\\\\\\\"output\\\\\\\"] | number: 1}}%</p>\\n                <span></span>\\n                <p>Last Week Performance</p>\\n            </div>\\n\\t\\t\\t<div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number5\\\\\\\" class=\\\\\\\"number\\\\\\\">{{sentiment[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number: 1}}</p>\\n                <span></span>\\n                <p>Average Sentiment</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<style>\\n\\n\\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\\nbody{\\n  font-family: Open Sans, \\\\\\\"Helvetica Neue\\\\\\\", \\\\\\\"Helvetica\\\\\\\", Helvetica, Arial,   sans-serif;\\n  font-size: 13px;\\n  color: #3b4d69;\\n  position: relative;\\n  -webkit-font-smoothing: antialiased;\\n  margin: 0;\\n}\\n\\n#TextWidget *{\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\\n  margin: 0;\\n  padding: 0;\\n  font-size: 13px;\\n  direction: ltr;\\n}\\n\\n#TextWidget .sectionClass{\\n  padding: 20px 0px 45px 0px;\\n  position: relative;\\n  display: block;\\n}\\n\\n#TextWidget .fullWidth{\\n  width: 100%;\\n  display: table;\\n  float: none;\\n  padding: 0;\\n  min-height: 1px;\\n  height: 100%!;\\n  position: relative;\\n}\\n\\n\\n#TextWidget .sectiontitle{\\n  background-position: center;\\n  margin: 0px 0 0px;\\n  text-align: center;\\n  min-height: 0px;\\n}\\n\\n#TextWidget .sectiontitle h2{\\n  font-size: 10px;\\n  color: #FFF;\\n  margin-bottom: 0px;\\npadding-right: 10px;\\npadding-left: 10px;\\n}\\n\\n\\n#TextWidget .headerLine{\\n  width: 0px;\\n  height: 0px;\\n  display: inline-block;\\n  background: #FFF;\\n}\\n\\n\\n#TextWidget .projectFactsWrap{\\n    display: flex;\\n  margin-top: 0px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\n\\n#TextWidget #projectFacts .fullWidth{\\n  padding: 0;\\n}\\n\\n#TextWidget .projectFactsWrap .item{\\n  width: 20%;\\n  height: 100%;\\n  padding: 14px 0px;\\n  text-align: center;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(1){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(2){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(3){\\n  background: rgb(255, 255, 255);\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(4){\\n  background: rgb(255, 255, 255);\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(5){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(6){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item p.number{\\n  font-size: 37px;\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n#TextWidget .projectFactsWrap .item p{\\n  color: #143f5b;\\n  font-size: 18px;\\n  margin: 0;\\n  padding: 8px;\\n  font-family: 'Open Sans';\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item span{\\n  width: 60px;\\n  background: #143f5b;\\n  height: 2px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item i{\\n  vertical-align: middle;\\n  font-size: 50px;\\n  color: #6c82a7;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\\n  color: black;\\n}\\n\\n#TextWidget .projectFactsWrap .item:hover span{\\n  background: black;\\n}\\n\\n#TextWidget @media (max-width: 786px){\\n  .projectFactsWrap .item {\\n     flex: 0 0 50%;\\n  }\\n#TextWidget }\\n\\n\\n#TextWidget .trans{\\n  opacity: 1;\\n  -webkit-transform: translateX(0px);\\n  transform: translateX(0px);\\n  -webkit-transition: all 500ms ease;\\n  -moz-transition: all 500ms ease;\\n  transition: all 500ms ease;\\n\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"Symbol\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select ( Symbol, website ) | Collect ( 1 ) ;\\\"},{\\\"name\\\":\\\"yearAgoVar\\\",\\\"query\\\":\\\"yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2018-09-21\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"todayVar\\\",\\\"query\\\":\\\"today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-13\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"weekAgoVar\\\",\\\"query\\\":\\\"weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-06\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"curQuote\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(price)) | Collect(1);\\\"},{\\\"name\\\":\\\"yearAgo\\\",\\\"query\\\":\\\"( 100 * ( today / yearAgo - 1 ) )\\\"},{\\\"name\\\":\\\"weekAgo\\\",\\\"query\\\":\\\"( 100 * ( today / weekAgo- 1 ) )\\\"},{\\\"name\\\":\\\"sentiment\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(score)) | Collect(1);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; Panel ( 4 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div class = \\\\\\\"header\\\\\\\"> <font size = \\\\\\\"5\\\\\\\" color = #fff><b>Tweets</b></font></div>\\n<div ng-repeat=\\\\\\\"item in tweets[0].output.data.values\\\\\\\" style=\\\\\\\"word-wrap: break-word; margin-right: 25px\\\\\\\">\\n<div id=\\\\\\\"colorstrip\\\\\\\"></div>\\n<ol class=\\\\\\\"KPI\\\\\\\">\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Author: </b>{{item[1]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Tweet: </b>{{item[0]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Retweets: </b>{{item[2]}}</p></li>\\n</ol>\\n</div>\\n<style>\\n#TextWidget #colorstrip{\\n    width: 100%; height: 2px;\\n    border-style: solid;\\n    border-color: #F0F0F0;\\n    background-color: #F0F0F0;\\n    margin-bottom: 10px;\\n}\\n#TextWidget .header{\\n\\tbackground-color: #28aae1;\\n\\tpadding-left: 10px;\\n}\\n#TextWidget ol{\\n  color: #000000;\\n  list-style-type: none;\\n}\\n#TextWidget ol li{\\n  position: relative;\\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\\n  margin-bottom: 10px;\\n  left: 5px;\\n}\\n#TextWidget li p.infoPiece{\\n  font: 16px/1.5 Helvetica, sans-serif;\\n  padding-left: 50px;\\n  color: #3b4d69;\\n}\\n#TextWidget .KPI span{\\n  position: absolute;\\n}\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"tweets\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(review,author,retweet_count) | Sort( columns = [ \\\\\\\"retweet_count\\\\\\\" ] , sort = [ \\\\\\\"desc\\\\\\\" ] ) | Collect(10);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; \",\"label\":\"Explore a Stock\",\"params\":[{\"paramName\":\"search\",\"view\":false,\"model\":{\"defaultValue\":\"\"}},{\"paramName\":\"stock\",\"required\":true,\"view\":{\"displayType\":\"dropdown\",\"label\":\"Select a Stock to Explore\"},\"model\":{\"query\":\"(infinite = Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \\\"<search>\\\") | Iterate()) | Collect(50);\",\"infiniteQuery\":\"infinite | Collect(50);\",\"searchParam\":\"search\",\"dependsOn\":[\"search\",\"filterChoice\"]}}],\"execute\":\"button\"}]}","viewOptionsMap":{"default-handle":{"param":true,"json":[{"query":"## Import the Data ## Database ( database = [ \"2f1deb90-aa70-4445-80c2-9fcdc28398da\" ] ) | Select ( JSON_PLACEHOLDER__beta , JSON_PLACEHOLDER__ceo , JSON_PLACEHOLDER__changes , JSON_PLACEHOLDER__changesPercentage , JSON_PLACEHOLDER__companyName , JSON_PLACEHOLDER__description , JSON_PLACEHOLDER__exchange , JSON_PLACEHOLDER__image , JSON_PLACEHOLDER__lastDiv , JSON_PLACEHOLDER__mktCap , JSON_PLACEHOLDER__price , JSON_PLACEHOLDER__range , JSON_PLACEHOLDER__sector , JSON_PLACEHOLDER__volAvg , JSON_PLACEHOLDER__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , volAvg , website ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME441315\" ] ) ] ) ; Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__WEEKLY_DATA_UNIQUE_ROW_ID , WEEKLY_DATA__close , WEEKLY_DATA__high , WEEKLY_DATA__low , WEEKLY_DATA__open , WEEKLY_DATA__timestamp , WEEKLY_DATA__volume ) .as ( [ Symbol , WEEKLY_DATA_UNIQUE_ROW_ID , close , high , low , open , timestamp , volume ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME330298\" ] ) ] ) ; FRAME441315 | Convert ( frameType = [ R ] ) ; FRAME441315 | AddColumn ( newCol = [ \"Symbol\" ] , dataType = [ \"STRING\" ] ) ; FRAME441315 | UpdateRowValues ( Symbol , \"<stock>\" , Filter ( ( beta > \"-100\" ) ) ) ; Frame ( FRAME441315 ) | Select ( FRAME441315__beta , FRAME441315__ceo , FRAME441315__changes , FRAME441315__changesPercentage , FRAME441315__companyName , FRAME441315__description , FRAME441315__exchange , FRAME441315__image , FRAME441315__lastDiv , FRAME441315__mktCap , FRAME441315__price , FRAME441315__range , FRAME441315__sector , FRAME441315__Symbol , FRAME441315__volAvg , FRAME441315__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , Symbol , volAvg , website ] ) | Merge ( joins = [ ( Symbol , inner.join , Symbol ) ] , frame = [ FRAME330298 ] ) ; RemoveFrame ( \"FRAME441315\" ) ; ## Search for Twitter ## Frame ( FRAME330298 ) | Select ( companyName ) | FlatMapLambda ( lambda = [ \"twittersearch\" ] , columns = [ \"companyName\" ] , params = [ { \"output\" : \"100\" , \"result_type\" : \"Mixed\" , \"geo_code\" : \"\" } ] ) | Merge ( joins = [ ( companyName , inner.join , companyName ) ] , frame = [ FRAME330298 ] ) ; ## Run Sentiment on the Tweets ## Frame ( FRAME330298 ) | Select ( review ) | FlatMapLambda ( lambda = [ \"googlesentiment\" ] , columns = [ \"review\" ] ) | Merge ( joins = [ ( review , inner.join , review ) ] , frame = [ FRAME330298 ] ) ; ## Visualize ## if ( ( FRAME330298 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"Average_of_open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  if ( ( FRAME330298 | HasDuplicates ( companyName ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , Average ( score ) ) .as ( [ companyName , Average_of_score ] ) | Group ( companyName ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"companyName\" ] , \"value\" : [ \"Average_of_score\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , score ) .as ( [ companyName , score ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"companyName\" ] , \"value\" : [ \"score\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"minMax\" : { \"min\" : { \"show\" : true , \"value\" : - 1 } , \"max\" : { \"show\" : true , \"value\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \"tools\" ) ; yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2018-09-21\" ]) | Collect(1); today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-13\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-06\" ]) | Collect(1); Panel ( 3 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div id=\\\"projectFacts\\\" class=\\\"sectionClass\\\">\n    <div class=\\\"fullWidth eight columns\\\">\n        <div class=\\\"projectFactsWrap \\\">\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"5\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number1\\\" class=\\\"number\\\"><a href='{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][1]}}'>{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0]}}</a></p>\n                <span></span>\n                <p>Symbol (Control-Click)</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"77\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number2\\\" class=\\\"number\\\">${{curQuote[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number:2}}</p>\n                <span></span>\n                <p>Quote</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"1988\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number3\\\" class=\\\"number\\\">{{yearAgo[0][\\\"output\\\"] | number:1}}%</p>\n                <span></span>\n                <p>Last 12 Month Performance</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number4\\\" class=\\\"number\\\">{{weekAgo[0][\\\"output\\\"] | number: 1}}%</p>\n                <span></span>\n                <p>Last Week Performance</p>\n            </div>\n\t\t\t<div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number5\\\" class=\\\"number\\\">{{sentiment[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number: 1}}</p>\n                <span></span>\n                <p>Average Sentiment</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n\n\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\nbody{\n  font-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\n  font-size: 13px;\n  color: #3b4d69;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n}\n\n#TextWidget *{\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\n  margin: 0;\n  padding: 0;\n  font-size: 13px;\n  direction: ltr;\n}\n\n#TextWidget .sectionClass{\n  padding: 20px 0px 45px 0px;\n  position: relative;\n  display: block;\n}\n\n#TextWidget .fullWidth{\n  width: 100%;\n  display: table;\n  float: none;\n  padding: 0;\n  min-height: 1px;\n  height: 100%!;\n  position: relative;\n}\n\n\n#TextWidget .sectiontitle{\n  background-position: center;\n  margin: 0px 0 0px;\n  text-align: center;\n  min-height: 0px;\n}\n\n#TextWidget .sectiontitle h2{\n  font-size: 10px;\n  color: #FFF;\n  margin-bottom: 0px;\npadding-right: 10px;\npadding-left: 10px;\n}\n\n\n#TextWidget .headerLine{\n  width: 0px;\n  height: 0px;\n  display: inline-block;\n  background: #FFF;\n}\n\n\n#TextWidget .projectFactsWrap{\n    display: flex;\n  margin-top: 0px;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n\n#TextWidget #projectFacts .fullWidth{\n  padding: 0;\n}\n\n#TextWidget .projectFactsWrap .item{\n  width: 20%;\n  height: 100%;\n  padding: 14px 0px;\n  text-align: center;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(1){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(2){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(3){\n  background: rgb(255, 255, 255);\n}\n#TextWidget .projectFactsWrap .item:nth-child(4){\n  background: rgb(255, 255, 255);\n}\n#TextWidget .projectFactsWrap .item:nth-child(5){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(6){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item p.number{\n  font-size: 37px;\n  padding: 0;\n  font-weight: bold;\n}\n\n#TextWidget .projectFactsWrap .item p{\n  color: #143f5b;\n  font-size: 18px;\n  margin: 0;\n  padding: 8px;\n  font-family: 'Open Sans';\n}\n\n\n#TextWidget .projectFactsWrap .item span{\n  width: 60px;\n  background: #143f5b;\n  height: 2px;\n  display: block;\n  margin: 0 auto;\n}\n\n\n#TextWidget .projectFactsWrap .item i{\n  vertical-align: middle;\n  font-size: 50px;\n  color: #6c82a7;\n}\n\n\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\n  color: black;\n}\n\n#TextWidget .projectFactsWrap .item:hover span{\n  background: black;\n}\n\n#TextWidget @media (max-width: 786px){\n  .projectFactsWrap .item {\n     flex: 0 0 50%;\n  }\n#TextWidget }\n\n\n#TextWidget .trans{\n  opacity: 1;\n  -webkit-transform: translateX(0px);\n  transform: translateX(0px);\n  -webkit-transition: all 500ms ease;\n  -moz-transition: all 500ms ease;\n  transition: all 500ms ease;\n\n</style>\",\"varList\":[{\"name\":\"Symbol\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select ( Symbol, website ) | Collect ( 1 ) ;\"},{\"name\":\"yearAgoVar\",\"query\":\"yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1);\"},{\"name\":\"todayVar\",\"query\":\"today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1);\"},{\"name\":\"weekAgoVar\",\"query\":\"weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1);\"},{\"name\":\"curQuote\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(price)) | Collect(1);\"},{\"name\":\"yearAgo\",\"query\":\"( 100 * ( today / yearAgo - 1 ) )\"},{\"name\":\"weekAgo\",\"query\":\"( 100 * ( today / weekAgo- 1 ) )\"},{\"name\":\"sentiment\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(score)) | Collect(1);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; Panel ( 4 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div class = \\\"header\\\"> <font size = \\\"5\\\" color = #fff><b>Tweets</b></font></div>\n<div ng-repeat=\\\"item in tweets[0].output.data.values\\\" style=\\\"word-wrap: break-word; margin-right: 25px\\\">\n<div id=\\\"colorstrip\\\"></div>\n<ol class=\\\"KPI\\\">\n<li><span></span><p class = \\\"infoPiece\\\"><b>Author: </b>{{item[1]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Tweet: </b>{{item[0]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Retweets: </b>{{item[2]}}</p></li>\n</ol>\n</div>\n<style>\n#TextWidget #colorstrip{\n    width: 100%; height: 2px;\n    border-style: solid;\n    border-color: #F0F0F0;\n    background-color: #F0F0F0;\n    margin-bottom: 10px;\n}\n#TextWidget .header{\n\tbackground-color: #28aae1;\n\tpadding-left: 10px;\n}\n#TextWidget ol{\n  color: #000000;\n  list-style-type: none;\n}\n#TextWidget ol li{\n  position: relative;\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\n  margin-bottom: 10px;\n  left: 5px;\n}\n#TextWidget li p.infoPiece{\n  font: 16px/1.5 Helvetica, sans-serif;\n  padding-left: 50px;\n  color: #3b4d69;\n}\n#TextWidget .KPI span{\n  position: absolute;\n}\n</style>\",\"varList\":[{\"name\":\"tweets\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(review,author,retweet_count) | Sort( columns = [ \\\"retweet_count\\\" ] , sort = [ \\\"desc\\\" ] ) | Collect(10);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; ","label":"Explore a Stock","params":[{"paramName":"search","view":false,"model":{"defaultValue":""}},{"paramName":"stock","required":true,"view":{"displayType":"dropdown","label":"Select a Stock to Explore"},"model":{"query":"(infinite = Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \"<search>\") | Iterate()) | Collect(50);","infiniteQuery":"infinite | Collect(50);","searchParam":"search","dependsOn":["search","filterChoice"]}}],"execute":"button"}]}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":0.0,"left":0.0,"width":33.33333333333333,"height":32.78481012658228},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"0\" ) ;","isMeta":false,"output":{"panelId":"0","panelLabel":"Explore a Stock","view":"default-handle","viewOptions":"{\"param\":true,\"json\":[{\"query\":\"## Import the Data ## Database ( database = [ \\\"2f1deb90-aa70-4445-80c2-9fcdc28398da\\\" ] ) | Select ( JSON_PLACEHOLDER__beta , JSON_PLACEHOLDER__ceo , JSON_PLACEHOLDER__changes , JSON_PLACEHOLDER__changesPercentage , JSON_PLACEHOLDER__companyName , JSON_PLACEHOLDER__description , JSON_PLACEHOLDER__exchange , JSON_PLACEHOLDER__image , JSON_PLACEHOLDER__lastDiv , JSON_PLACEHOLDER__mktCap , JSON_PLACEHOLDER__price , JSON_PLACEHOLDER__range , JSON_PLACEHOLDER__sector , JSON_PLACEHOLDER__volAvg , JSON_PLACEHOLDER__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , volAvg , website ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME441315\\\" ] ) ] ) ; Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__WEEKLY_DATA_UNIQUE_ROW_ID , WEEKLY_DATA__close , WEEKLY_DATA__high , WEEKLY_DATA__low , WEEKLY_DATA__open , WEEKLY_DATA__timestamp , WEEKLY_DATA__volume ) .as ( [ Symbol , WEEKLY_DATA_UNIQUE_ROW_ID , close , high , low , open , timestamp , volume ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME330298\\\" ] ) ] ) ; FRAME441315 | Convert ( frameType = [ R ] ) ; FRAME441315 | AddColumn ( newCol = [ \\\"Symbol\\\" ] , dataType = [ \\\"STRING\\\" ] ) ; FRAME441315 | UpdateRowValues ( Symbol , \\\"<stock>\\\" , Filter ( ( beta > \\\"-100\\\" ) ) ) ; Frame ( FRAME441315 ) | Select ( FRAME441315__beta , FRAME441315__ceo , FRAME441315__changes , FRAME441315__changesPercentage , FRAME441315__companyName , FRAME441315__description , FRAME441315__exchange , FRAME441315__image , FRAME441315__lastDiv , FRAME441315__mktCap , FRAME441315__price , FRAME441315__range , FRAME441315__sector , FRAME441315__Symbol , FRAME441315__volAvg , FRAME441315__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , Symbol , volAvg , website ] ) | Merge ( joins = [ ( Symbol , inner.join , Symbol ) ] , frame = [ FRAME330298 ] ) ; RemoveFrame ( \\\"FRAME441315\\\" ) ; ## Search for Twitter ## Frame ( FRAME330298 ) | Select ( companyName ) | FlatMapLambda ( lambda = [ \\\"twittersearch\\\" ] , columns = [ \\\"companyName\\\" ] , params = [ { \\\"output\\\" : \\\"100\\\" , \\\"result_type\\\" : \\\"Mixed\\\" , \\\"geo_code\\\" : \\\"\\\" } ] ) | Merge ( joins = [ ( companyName , inner.join , companyName ) ] , frame = [ FRAME330298 ] ) ; ## Run Sentiment on the Tweets ## Frame ( FRAME330298 ) | Select ( review ) | FlatMapLambda ( lambda = [ \\\"googlesentiment\\\" ] , columns = [ \\\"review\\\" ] ) | Merge ( joins = [ ( review , inner.join , review ) ] , frame = [ FRAME330298 ] ) ; ## Visualize ## if ( ( FRAME330298 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"Average_of_open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  if ( ( FRAME330298 | HasDuplicates ( companyName ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , Average ( score ) ) .as ( [ companyName , Average_of_score ] ) | Group ( companyName ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"companyName\\\" ] , \\\"value\\\" : [ \\\"Average_of_score\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , score ) .as ( [ companyName , score ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"companyName\\\" ] , \\\"value\\\" : [ \\\"score\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"minMax\\\" : { \\\"min\\\" : { \\\"show\\\" : true , \\\"value\\\" : - 1 } , \\\"max\\\" : { \\\"show\\\" : true , \\\"value\\\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1); today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1); Panel ( 3 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div id=\\\\\\\"projectFacts\\\\\\\" class=\\\\\\\"sectionClass\\\\\\\">\\n    <div class=\\\\\\\"fullWidth eight columns\\\\\\\">\\n        <div class=\\\\\\\"projectFactsWrap \\\\\\\">\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"5\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number1\\\\\\\" class=\\\\\\\"number\\\\\\\"><a href='{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][1]}}'>{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0]}}</a></p>\\n                <span></span>\\n                <p>Symbol (Control-Click)</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"77\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number2\\\\\\\" class=\\\\\\\"number\\\\\\\">${{curQuote[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number:2}}</p>\\n                <span></span>\\n                <p>Quote</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"1988\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number3\\\\\\\" class=\\\\\\\"number\\\\\\\">{{yearAgo[0][\\\\\\\"output\\\\\\\"] | number:1}}%</p>\\n                <span></span>\\n                <p>Last 12 Month Performance</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number4\\\\\\\" class=\\\\\\\"number\\\\\\\">{{weekAgo[0][\\\\\\\"output\\\\\\\"] | number: 1}}%</p>\\n                <span></span>\\n                <p>Last Week Performance</p>\\n            </div>\\n\\t\\t\\t<div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number5\\\\\\\" class=\\\\\\\"number\\\\\\\">{{sentiment[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number: 1}}</p>\\n                <span></span>\\n                <p>Average Sentiment</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<style>\\n\\n\\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\\nbody{\\n  font-family: Open Sans, \\\\\\\"Helvetica Neue\\\\\\\", \\\\\\\"Helvetica\\\\\\\", Helvetica, Arial,   sans-serif;\\n  font-size: 13px;\\n  color: #3b4d69;\\n  position: relative;\\n  -webkit-font-smoothing: antialiased;\\n  margin: 0;\\n}\\n\\n#TextWidget *{\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\\n  margin: 0;\\n  padding: 0;\\n  font-size: 13px;\\n  direction: ltr;\\n}\\n\\n#TextWidget .sectionClass{\\n  padding: 20px 0px 45px 0px;\\n  position: relative;\\n  display: block;\\n}\\n\\n#TextWidget .fullWidth{\\n  width: 100%;\\n  display: table;\\n  float: none;\\n  padding: 0;\\n  min-height: 1px;\\n  height: 100%!;\\n  position: relative;\\n}\\n\\n\\n#TextWidget .sectiontitle{\\n  background-position: center;\\n  margin: 0px 0 0px;\\n  text-align: center;\\n  min-height: 0px;\\n}\\n\\n#TextWidget .sectiontitle h2{\\n  font-size: 10px;\\n  color: #FFF;\\n  margin-bottom: 0px;\\npadding-right: 10px;\\npadding-left: 10px;\\n}\\n\\n\\n#TextWidget .headerLine{\\n  width: 0px;\\n  height: 0px;\\n  display: inline-block;\\n  background: #FFF;\\n}\\n\\n\\n#TextWidget .projectFactsWrap{\\n    display: flex;\\n  margin-top: 0px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\n\\n#TextWidget #projectFacts .fullWidth{\\n  padding: 0;\\n}\\n\\n#TextWidget .projectFactsWrap .item{\\n  width: 20%;\\n  height: 100%;\\n  padding: 14px 0px;\\n  text-align: center;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(1){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(2){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(3){\\n  background: rgb(255, 255, 255);\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(4){\\n  background: rgb(255, 255, 255);\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(5){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(6){\\n  background: rgb(255, 255, 255);\\n}\\n\\n#TextWidget .projectFactsWrap .item p.number{\\n  font-size: 37px;\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n#TextWidget .projectFactsWrap .item p{\\n  color: #143f5b;\\n  font-size: 18px;\\n  margin: 0;\\n  padding: 8px;\\n  font-family: 'Open Sans';\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item span{\\n  width: 60px;\\n  background: #143f5b;\\n  height: 2px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item i{\\n  vertical-align: middle;\\n  font-size: 50px;\\n  color: #6c82a7;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\\n  color: black;\\n}\\n\\n#TextWidget .projectFactsWrap .item:hover span{\\n  background: black;\\n}\\n\\n#TextWidget @media (max-width: 786px){\\n  .projectFactsWrap .item {\\n     flex: 0 0 50%;\\n  }\\n#TextWidget }\\n\\n\\n#TextWidget .trans{\\n  opacity: 1;\\n  -webkit-transform: translateX(0px);\\n  transform: translateX(0px);\\n  -webkit-transition: all 500ms ease;\\n  -moz-transition: all 500ms ease;\\n  transition: all 500ms ease;\\n\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"Symbol\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select ( Symbol, website ) | Collect ( 1 ) ;\\\"},{\\\"name\\\":\\\"yearAgoVar\\\",\\\"query\\\":\\\"yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2018-09-21\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"todayVar\\\",\\\"query\\\":\\\"today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-13\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"weekAgoVar\\\",\\\"query\\\":\\\"weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-06\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"curQuote\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(price)) | Collect(1);\\\"},{\\\"name\\\":\\\"yearAgo\\\",\\\"query\\\":\\\"( 100 * ( today / yearAgo - 1 ) )\\\"},{\\\"name\\\":\\\"weekAgo\\\",\\\"query\\\":\\\"( 100 * ( today / weekAgo- 1 ) )\\\"},{\\\"name\\\":\\\"sentiment\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(score)) | Collect(1);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; Panel ( 4 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div class = \\\\\\\"header\\\\\\\"> <font size = \\\\\\\"5\\\\\\\" color = #fff><b>Tweets</b></font></div>\\n<div ng-repeat=\\\\\\\"item in tweets[0].output.data.values\\\\\\\" style=\\\\\\\"word-wrap: break-word; margin-right: 25px\\\\\\\">\\n<div id=\\\\\\\"colorstrip\\\\\\\"></div>\\n<ol class=\\\\\\\"KPI\\\\\\\">\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Author: </b>{{item[1]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Tweet: </b>{{item[0]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Retweets: </b>{{item[2]}}</p></li>\\n</ol>\\n</div>\\n<style>\\n#TextWidget #colorstrip{\\n    width: 100%; height: 2px;\\n    border-style: solid;\\n    border-color: #F0F0F0;\\n    background-color: #F0F0F0;\\n    margin-bottom: 10px;\\n}\\n#TextWidget .header{\\n\\tbackground-color: #28aae1;\\n\\tpadding-left: 10px;\\n}\\n#TextWidget ol{\\n  color: #000000;\\n  list-style-type: none;\\n}\\n#TextWidget ol li{\\n  position: relative;\\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\\n  margin-bottom: 10px;\\n  left: 5px;\\n}\\n#TextWidget li p.infoPiece{\\n  font: 16px/1.5 Helvetica, sans-serif;\\n  padding-left: 50px;\\n  color: #3b4d69;\\n}\\n#TextWidget .KPI span{\\n  position: absolute;\\n}\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"tweets\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME330298 ] ) | Select(review,author,retweet_count) | Sort( columns = [ \\\\\\\"retweet_count\\\\\\\" ] , sort = [ \\\\\\\"desc\\\\\\\" ] ) | Collect(10);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; \",\"label\":\"Explore a Stock\",\"params\":[{\"paramName\":\"search\",\"view\":false,\"model\":{\"defaultValue\":\"\"}},{\"paramName\":\"stock\",\"required\":true,\"view\":{\"displayType\":\"dropdown\",\"label\":\"Select a Stock to Explore\"},\"model\":{\"query\":\"(infinite = Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \\\"<search>\\\") | Iterate()) | Collect(50);\",\"infiniteQuery\":\"infinite | Collect(50);\",\"searchParam\":\"search\",\"dependsOn\":[\"search\",\"filterChoice\"]}}],\"execute\":\"button\"}]}","viewOptionsMap":{"default-handle":{"param":true,"json":[{"query":"## Import the Data ## Database ( database = [ \"2f1deb90-aa70-4445-80c2-9fcdc28398da\" ] ) | Select ( JSON_PLACEHOLDER__beta , JSON_PLACEHOLDER__ceo , JSON_PLACEHOLDER__changes , JSON_PLACEHOLDER__changesPercentage , JSON_PLACEHOLDER__companyName , JSON_PLACEHOLDER__description , JSON_PLACEHOLDER__exchange , JSON_PLACEHOLDER__image , JSON_PLACEHOLDER__lastDiv , JSON_PLACEHOLDER__mktCap , JSON_PLACEHOLDER__price , JSON_PLACEHOLDER__range , JSON_PLACEHOLDER__sector , JSON_PLACEHOLDER__volAvg , JSON_PLACEHOLDER__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , volAvg , website ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME441315\" ] ) ] ) ; Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__WEEKLY_DATA_UNIQUE_ROW_ID , WEEKLY_DATA__close , WEEKLY_DATA__high , WEEKLY_DATA__low , WEEKLY_DATA__open , WEEKLY_DATA__timestamp , WEEKLY_DATA__volume ) .as ( [ Symbol , WEEKLY_DATA_UNIQUE_ROW_ID , close , high , low , open , timestamp , volume ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME330298\" ] ) ] ) ; FRAME441315 | Convert ( frameType = [ R ] ) ; FRAME441315 | AddColumn ( newCol = [ \"Symbol\" ] , dataType = [ \"STRING\" ] ) ; FRAME441315 | UpdateRowValues ( Symbol , \"<stock>\" , Filter ( ( beta > \"-100\" ) ) ) ; Frame ( FRAME441315 ) | Select ( FRAME441315__beta , FRAME441315__ceo , FRAME441315__changes , FRAME441315__changesPercentage , FRAME441315__companyName , FRAME441315__description , FRAME441315__exchange , FRAME441315__image , FRAME441315__lastDiv , FRAME441315__mktCap , FRAME441315__price , FRAME441315__range , FRAME441315__sector , FRAME441315__Symbol , FRAME441315__volAvg , FRAME441315__website ) .as ( [ beta , ceo , changes , changesPercentage , companyName , description , exchange , image , lastDiv , mktCap , price , range , sector , Symbol , volAvg , website ] ) | Merge ( joins = [ ( Symbol , inner.join , Symbol ) ] , frame = [ FRAME330298 ] ) ; RemoveFrame ( \"FRAME441315\" ) ; ## Search for Twitter ## Frame ( FRAME330298 ) | Select ( companyName ) | FlatMapLambda ( lambda = [ \"twittersearch\" ] , columns = [ \"companyName\" ] , params = [ { \"output\" : \"100\" , \"result_type\" : \"Mixed\" , \"geo_code\" : \"\" } ] ) | Merge ( joins = [ ( companyName , inner.join , companyName ) ] , frame = [ FRAME330298 ] ) ; ## Run Sentiment on the Tweets ## Frame ( FRAME330298 ) | Select ( review ) | FlatMapLambda ( lambda = [ \"googlesentiment\" ] , columns = [ \"review\" ] ) | Merge ( joins = [ ( review , inner.join , review ) ] , frame = [ FRAME330298 ] ) ; ## Visualize ## if ( ( FRAME330298 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"Average_of_open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  if ( ( FRAME330298 | HasDuplicates ( companyName ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , Average ( score ) ) .as ( [ companyName , Average_of_score ] ) | Group ( companyName ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"companyName\" ] , \"value\" : [ \"Average_of_score\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME330298 ] ) | Select ( companyName , score ) .as ( [ companyName , score ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"companyName\" ] , \"value\" : [ \"score\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"minMax\" : { \"min\" : { \"show\" : true , \"value\" : - 1 } , \"max\" : { \"show\" : true , \"value\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \"tools\" ) ; yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2018-09-21\" ]) | Collect(1); today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-13\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-06\" ]) | Collect(1); Panel ( 3 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div id=\\\"projectFacts\\\" class=\\\"sectionClass\\\">\n    <div class=\\\"fullWidth eight columns\\\">\n        <div class=\\\"projectFactsWrap \\\">\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"5\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number1\\\" class=\\\"number\\\"><a href='{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][1]}}'>{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0]}}</a></p>\n                <span></span>\n                <p>Symbol (Control-Click)</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"77\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number2\\\" class=\\\"number\\\">${{curQuote[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number:2}}</p>\n                <span></span>\n                <p>Quote</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"1988\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number3\\\" class=\\\"number\\\">{{yearAgo[0][\\\"output\\\"] | number:1}}%</p>\n                <span></span>\n                <p>Last 12 Month Performance</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number4\\\" class=\\\"number\\\">{{weekAgo[0][\\\"output\\\"] | number: 1}}%</p>\n                <span></span>\n                <p>Last Week Performance</p>\n            </div>\n\t\t\t<div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number5\\\" class=\\\"number\\\">{{sentiment[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number: 1}}</p>\n                <span></span>\n                <p>Average Sentiment</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n\n\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\nbody{\n  font-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\n  font-size: 13px;\n  color: #3b4d69;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n}\n\n#TextWidget *{\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\n  margin: 0;\n  padding: 0;\n  font-size: 13px;\n  direction: ltr;\n}\n\n#TextWidget .sectionClass{\n  padding: 20px 0px 45px 0px;\n  position: relative;\n  display: block;\n}\n\n#TextWidget .fullWidth{\n  width: 100%;\n  display: table;\n  float: none;\n  padding: 0;\n  min-height: 1px;\n  height: 100%!;\n  position: relative;\n}\n\n\n#TextWidget .sectiontitle{\n  background-position: center;\n  margin: 0px 0 0px;\n  text-align: center;\n  min-height: 0px;\n}\n\n#TextWidget .sectiontitle h2{\n  font-size: 10px;\n  color: #FFF;\n  margin-bottom: 0px;\npadding-right: 10px;\npadding-left: 10px;\n}\n\n\n#TextWidget .headerLine{\n  width: 0px;\n  height: 0px;\n  display: inline-block;\n  background: #FFF;\n}\n\n\n#TextWidget .projectFactsWrap{\n    display: flex;\n  margin-top: 0px;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n\n#TextWidget #projectFacts .fullWidth{\n  padding: 0;\n}\n\n#TextWidget .projectFactsWrap .item{\n  width: 20%;\n  height: 100%;\n  padding: 14px 0px;\n  text-align: center;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(1){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(2){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(3){\n  background: rgb(255, 255, 255);\n}\n#TextWidget .projectFactsWrap .item:nth-child(4){\n  background: rgb(255, 255, 255);\n}\n#TextWidget .projectFactsWrap .item:nth-child(5){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(6){\n  background: rgb(255, 255, 255);\n}\n\n#TextWidget .projectFactsWrap .item p.number{\n  font-size: 37px;\n  padding: 0;\n  font-weight: bold;\n}\n\n#TextWidget .projectFactsWrap .item p{\n  color: #143f5b;\n  font-size: 18px;\n  margin: 0;\n  padding: 8px;\n  font-family: 'Open Sans';\n}\n\n\n#TextWidget .projectFactsWrap .item span{\n  width: 60px;\n  background: #143f5b;\n  height: 2px;\n  display: block;\n  margin: 0 auto;\n}\n\n\n#TextWidget .projectFactsWrap .item i{\n  vertical-align: middle;\n  font-size: 50px;\n  color: #6c82a7;\n}\n\n\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\n  color: black;\n}\n\n#TextWidget .projectFactsWrap .item:hover span{\n  background: black;\n}\n\n#TextWidget @media (max-width: 786px){\n  .projectFactsWrap .item {\n     flex: 0 0 50%;\n  }\n#TextWidget }\n\n\n#TextWidget .trans{\n  opacity: 1;\n  -webkit-transform: translateX(0px);\n  transform: translateX(0px);\n  -webkit-transition: all 500ms ease;\n  -moz-transition: all 500ms ease;\n  transition: all 500ms ease;\n\n</style>\",\"varList\":[{\"name\":\"Symbol\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select ( Symbol, website ) | Collect ( 1 ) ;\"},{\"name\":\"yearAgoVar\",\"query\":\"yearAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1);\"},{\"name\":\"todayVar\",\"query\":\"today = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1);\"},{\"name\":\"weekAgoVar\",\"query\":\"weekAgo = Frame ( frame = [ FRAME330298 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1);\"},{\"name\":\"curQuote\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(price)) | Collect(1);\"},{\"name\":\"yearAgo\",\"query\":\"( 100 * ( today / yearAgo - 1 ) )\"},{\"name\":\"weekAgo\",\"query\":\"( 100 * ( today / weekAgo- 1 ) )\"},{\"name\":\"sentiment\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(Average(score)) | Collect(1);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; Panel ( 4 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div class = \\\"header\\\"> <font size = \\\"5\\\" color = #fff><b>Tweets</b></font></div>\n<div ng-repeat=\\\"item in tweets[0].output.data.values\\\" style=\\\"word-wrap: break-word; margin-right: 25px\\\">\n<div id=\\\"colorstrip\\\"></div>\n<ol class=\\\"KPI\\\">\n<li><span></span><p class = \\\"infoPiece\\\"><b>Author: </b>{{item[1]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Tweet: </b>{{item[0]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Retweets: </b>{{item[2]}}</p></li>\n</ol>\n</div>\n<style>\n#TextWidget #colorstrip{\n    width: 100%; height: 2px;\n    border-style: solid;\n    border-color: #F0F0F0;\n    background-color: #F0F0F0;\n    margin-bottom: 10px;\n}\n#TextWidget .header{\n\tbackground-color: #28aae1;\n\tpadding-left: 10px;\n}\n#TextWidget ol{\n  color: #000000;\n  list-style-type: none;\n}\n#TextWidget ol li{\n  position: relative;\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\n  margin-bottom: 10px;\n  left: 5px;\n}\n#TextWidget li p.infoPiece{\n  font: 16px/1.5 Helvetica, sans-serif;\n  padding-left: 50px;\n  color: #3b4d69;\n}\n#TextWidget .KPI span{\n  position: absolute;\n}\n</style>\",\"varList\":[{\"name\":\"tweets\",\"query\":\"Frame ( frame = [ FRAME330298 ] ) | Select(review,author,retweet_count) | Sort( columns = [ \\\"retweet_count\\\" ] , sort = [ \\\"desc\\\" ] ) | Collect(10);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; ","label":"Explore a Stock","params":[{"paramName":"search","view":false,"model":{"defaultValue":""}},{"paramName":"stock","required":true,"view":{"displayType":"dropdown","label":"Select a Stock to Explore"},"model":{"query":"(infinite = Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \"<search>\") | Iterate()) | Collect(50);","infiniteQuery":"infinite | Collect(50);","searchParam":"search","dependsOn":["search","filterChoice"]}}],"execute":"button"}]}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":0.0,"left":0.0,"width":33.33333333333333,"height":32.78481012658228},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"1\" ) ;","isMeta":false,"output":{"panelId":"1","panelLabel":"Line Chart of Stock Price","view":"visualization","viewOptions":"{\"type\":\"echarts\"}","viewOptionsMap":{"visualization":{"type":"echarts"}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{"onSingleClick":{"Unfilter":[{"disabledVisuals":["Grid","Sunburst"],"default":true,"query":"(<Frame> | UnfilterFrame(<SelectedColumn>));","options":{},"refresh":false,"disabled":false,"panel":""}]},"onBrush":{"Filter":[{"default":true,"query":"if((IsEmpty(<SelectedValues>)),(<Frame> | UnfilterFrame(<SelectedColumn>)), (<Frame> | SetFrameFilter(<SelectedColumn>==<SelectedValues>)));","options":{},"refresh":false,"disabled":false,"panel":""}]}},"comments":{},"position":{"top":33.164556962025316,"left":0.0,"width":33.33333333333333,"height":66.83544303797468},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"2\" ) ;","isMeta":false,"output":{"panelId":"2","panelLabel":"Gauge of Sentiment","view":"visualization","viewOptions":"{\"type\":\"echarts\"}","viewOptionsMap":{"visualization":{"type":"echarts"}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":39.49367088607595,"left":66.77083333333333,"width":33.229166666666664,"height":60.50632911392405},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"3\" ) ;","isMeta":false,"output":{"panelId":"3","panelLabel":"KPIs","viewOptionsMap":{},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":0.0,"left":33.385416666666664,"width":66.61458333333333,"height":39.24050632911392},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"4\" ) ;","isMeta":false,"output":{"panelId":"4","panelLabel":"Tweets","viewOptionsMap":{},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":39.36708860759494,"left":33.33333333333333,"width":33.33333333333333,"height":60.63291139240506},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]}]}