{"insightID":"53bc90bc-6d43-4ff7-984c-5bdfef469c88","pixelReturn":[{"pixelExpression":"CachedPanel ( \"0\" ) ;","isMeta":false,"output":{"panelId":"0","panelLabel":"Explore a Stock","view":"default-handle","viewOptions":"{\"param\":true,\"json\":[{\"query\":\"## Import the Data ## API ( api_type = [ \\\"JSON2\\\" ] , aliasMap = [ { \\\"input_url\\\" : \\\"https://api.worldtradingdata.com/api/v1/stock?symbol=@symbol0@&api_token=@api_token1@\\\" , \\\"input_method\\\" : \\\"get\\\" , \\\"symbol\\\" : \\\"\\\\\\\"symbol\\\\\\\"\\\" , \\\"name\\\" : \\\"\\\\\\\"name\\\\\\\"\\\" , \\\"price\\\" : \\\"\\\\\\\"price\\\\\\\"\\\" , \\\"day_change\\\" : \\\"\\\\\\\"day_change\\\\\\\"\\\" , \\\"change_pct\\\" : \\\"\\\\\\\"change_pct\\\\\\\"\\\" , \\\"last_trade_time\\\" : \\\"\\\\\\\"last_trade_time\\\\\\\"\\\" , \\\"root\\\" : \\\"\\\\\\\"data\\\\\\\"[]\\\" } ] ) | Select ( placeholder__symbol , placeholder__name , placeholder__price , placeholder__day_change , placeholder__change_pct , placeholder__last_trade_time ) .as ( [ symbol , name , price , day_change , change_pct , last_trade_time ] ) | Filter ( symbol0 == [ \\\"<stock>\\\" ] ) | Filter ( api_token1 == [ \\\"z5me79EzQmlzDutKTs1gd72rW82kJAoWOOyKVM1g2RtU0L85At1R1dcKruPx\\\" ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME885319\\\" ] ) ] ) ; Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__open , WEEKLY_DATA__timestamp ) .as ( [ Symbol , open , timestamp ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME159183\\\" ] ) ] ) ; Frame ( FRAME885319 ) | Select ( FRAME885319__change_pct , FRAME885319__day_change , FRAME885319__last_trade_time , FRAME885319__name , FRAME885319__price , FRAME885319__symbol ) .as ( [ change_pct , day_change , last_trade_time , name , price , symbol ] ) | Merge ( joins = [ ( Symbol , inner.join , symbol ) ] , frame = [ FRAME159183 ] ) ; RemoveFrame ( \\\"FRAME885319\\\" ) ; FRAME159183 | Convert ( frameType = [ R ] ) .as ( [ 'FRAME159183' ] ) ; FRAME159183 | ChangeColumnType ( column = [ price ] , dataType = [ \\\"NUMBER\\\" ] ) ; FRAME159183 | AddColumn ( newCol = [ \\\"yahoo\\\" ] , dataType = [ \\\"STRING\\\" ] ) ; FRAME159183 | UpdateRowValues ( yahoo , \\\"https://finance.yahoo.com/quote/\\\" , Filter ( price > 0 ) ) ; FRAME159183 | JoinColumns ( newCol = [ \\\"yahoofinance\\\" ] , delimiter = [ \\\"\\\" ] , columns = [ \\\"yahoo\\\" , \\\"Symbol\\\" ] ) ; ## Search for Twitter ## Frame ( FRAME159183 ) | Select ( name ) | FlatMapLambda ( lambda = [ \\\"twittersearch\\\" ] , columns = [ \\\"name\\\" ] , params = [ { \\\"output\\\" : \\\"100\\\" , \\\"result_type\\\" : \\\"Mixed\\\" , \\\"geo_code\\\" : \\\"\\\" } ] ) | Merge ( joins = [ ( name , inner.join , name ) ] , frame = [ FRAME159183 ] ) ; ## Run Sentiment on the Tweets ## R ( \\\"<encode>sentimentFrame <- as.data.frame(unique(FRAME159183$review)); names(sentimentFrame) <- c(\\\"review\\\"); sentimentFrame <- score_sentiment(sentimentFrame); FRAME159183 <- merge(FRAME159183,sentimentFrame,by=\\\"review\\\"); FRAME159183 <- as.data.table(FRAME159183);  </encode>\\\" ) ; GenerateFrameFromRVariable(\\\"FRAME159183\\\"); ## Visualize ## Panel ( 1 ) | SetPanelView ( \\\"visualization\\\" , \\\"<encode>{\\\"type\\\":\\\"echarts\\\"}</encode>\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"Average_of_open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"toggleZoomX\\\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools.shared.toggleZoomX\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editXAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Date\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"format\\\" : { \\\"type\\\" : \\\"Default\\\" , \\\"delimiter\\\" : \\\"Default\\\" , \\\"prepend\\\" : \\\"\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editYAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Stock Price\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } , \\\"format\\\" : { \\\"delimiter\\\" : \\\",\\\" , \\\"prepend\\\" : \\\"$\\\" , \\\"type\\\" : \\\"Default\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 2 ) | SetPanelView ( \\\"visualization\\\" , \\\"<encode>{\\\"type\\\":\\\"echarts\\\"}</encode>\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( name ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , Average ( sentiment ) ) .as ( [ name , Average_of_sentiment ] ) | Group ( name ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"Average_of_sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , sentiment ) .as ( [ name , sentiment ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"minMax\\\" : { \\\"min\\\" : { \\\"show\\\" : true , \\\"value\\\" : - 1 } , \\\"max\\\" : { \\\"show\\\" : true , \\\"value\\\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1); today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1); Panel ( 4 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div class = \\\\\\\"header\\\\\\\"> <font size = \\\\\\\"5\\\\\\\" color = #fff>Tweets about {{tweets[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}}</font></div>\\n<div ng-repeat=\\\\\\\"item in tweets[0].output.data.values\\\\\\\" style=\\\\\\\"word-wrap: break-word; margin-right: 25px\\\\\\\">\\n<div id=\\\\\\\"colorstrip\\\\\\\"></div>\\n<ol class=\\\\\\\"KPI\\\\\\\">\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Tweet: </b>{{item[0]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Retweets: </b>{{item[1]}}</p></li>\\n</ol>\\n</div>\\n<style>\\n#TextWidget #colorstrip{\\n    width: 100%; height: 2px;\\n    border-style: solid;\\n    border-color: #F0F0F0;\\n    background-color: #F0F0F0;\\n    margin-bottom: 10px;\\n}\\n#TextWidget .header{\\n\\tbackground-color: #28aae1;\\n\\tpadding-left: 10px;\\n}\\n#TextWidget ol{\\n  color: #000000;\\n  list-style-type: none;\\n}\\n#TextWidget ol li{\\n  position: relative;\\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\\n  margin-bottom: 10px;\\n  left: 5px;\\n}\\n#TextWidget li p.infoPiece{\\n  font: 16px/1.5 Helvetica, sans-serif;\\n  padding-left: 50px;\\n  color: #3b4d69;\\n}\\n#TextWidget .KPI span{\\n  position: absolute;\\n}\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"tweets\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(review,retweet_count,name) | Sort( columns = [ \\\\\\\"retweet_count\\\\\\\" ] , sort = [ \\\\\\\"desc\\\\\\\" ] ) | Collect(10);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; Panel ( 3 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div id=\\\\\\\"projectFacts\\\\\\\" class=\\\\\\\"sectionClass\\\\\\\">\\n    <div class=\\\\\\\"fullWidth eight columns\\\\\\\">\\n        <div class=\\\\\\\"projectFactsWrap \\\\\\\">\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"5\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number1\\\\\\\" class=\\\\\\\"number\\\\\\\"><a href='{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][1]}}'>{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0]}}</a></p>\\n                <span></span>\\n                <p>Symbol (Control + Click)</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"77\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number2\\\\\\\" class=\\\\\\\"number\\\\\\\">${{curQuote[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number:2}}</p>\\n                <span></span>\\n                <p>Quote ({{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}})</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"1988\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number3\\\\\\\" class=\\\\\\\"number\\\\\\\">{{yearAgo[0][\\\\\\\"output\\\\\\\"] | number:1}}%</p>\\n                <span></span>\\n                <p>Last 12 Month Performance</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number4\\\\\\\" class=\\\\\\\"number\\\\\\\">{{weekAgo[0][\\\\\\\"output\\\\\\\"] | number: 1}}%</p>\\n                <span></span>\\n                <p>Last Week Performance</p>\\n            </div>\\n\\t\\t\\t<div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number5\\\\\\\" class=\\\\\\\"number\\\\\\\">{{sentiment[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number: 3}}</p>\\n                <span></span>\\n                <p>Average Sentiment</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<style>\\n\\n\\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\\nbody{\\n  font-family: Open Sans, \\\\\\\"Helvetica Neue\\\\\\\", \\\\\\\"Helvetica\\\\\\\", Helvetica, Arial,   sans-serif;\\n  font-size: 13px;\\n  color: #3b4d69;\\n  position: relative;\\n  -webkit-font-smoothing: antialiased;\\n  margin: 0;\\n}\\n\\n#TextWidget *{\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\\n  margin: 0;\\n  padding: 0;\\n  font-size: 13px;\\n  direction: ltr;\\n}\\n\\n#TextWidget .sectionClass{\\n  padding: 20px 0px 45px 0px;\\n  position: relative;\\n  display: block;\\n}\\n\\n#TextWidget .fullWidth{\\n  width: 100%;\\n  display: table;\\n  float: none;\\n  padding: 0;\\n  min-height: 1px;\\n  height: 100%!;\\n  position: relative;\\n}\\n\\n\\n#TextWidget .sectiontitle{\\n  background-position: center;\\n  margin: 0px 0 0px;\\n  text-align: center;\\n  min-height: 0px;\\n}\\n\\n#TextWidget .sectiontitle h2{\\n  font-size: 10px;\\n  color: #FFF;\\n  margin-bottom: 0px;\\npadding-right: 10px;\\npadding-left: 10px;\\n}\\n\\n\\n#TextWidget .headerLine{\\n  width: 0px;\\n  height: 0px;\\n  display: inline-block;\\n  background: #FFF;\\n}\\n\\n\\n#TextWidget .projectFactsWrap{\\n    display: flex;\\n  margin-top: 0px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\n\\n#TextWidget #projectFacts .fullWidth{\\n  padding: 0;\\n}\\n\\n#TextWidget .projectFactsWrap .item{\\n  width: 20%;\\n  height: 100%;\\n  padding: 14px 0px;\\n  text-align: center;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(1){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(2){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(3){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(4){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(5){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(6){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item p.number{\\n  font-size: 37px;\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n#TextWidget .projectFactsWrap .item p{\\n  color: #143f5b;\\n  font-size: 18px;\\n  margin: 0;\\n  padding: 8px;\\n  font-family: 'Open Sans';\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item span{\\n  width: 60px;\\n  background: #143f5b;\\n  height: 2px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item i{\\n  vertical-align: middle;\\n  font-size: 50px;\\n  color: #6c82a7;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\\n  color: black;\\n}\\n\\n#TextWidget .projectFactsWrap .item:hover span{\\n  background: black;\\n}\\n\\n#TextWidget @media (max-width: 786px){\\n  .projectFactsWrap .item {\\n     flex: 0 0 50%;\\n  }\\n#TextWidget }\\n\\n\\n#TextWidget .trans{\\n  opacity: 1;\\n  -webkit-transform: translateX(0px);\\n  transform: translateX(0px);\\n  -webkit-transition: all 500ms ease;\\n  -moz-transition: all 500ms ease;\\n  transition: all 500ms ease;\\n\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"Symbol\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select ( Symbol,yahoofinance,last_trade_time ) | Collect ( 1 ) ;\\\"},{\\\"name\\\":\\\"yearAgoVar\\\",\\\"query\\\":\\\"yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2018-09-21\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"todayVar\\\",\\\"query\\\":\\\"today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-13\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"weekAgoVar\\\",\\\"query\\\":\\\"weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-06\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"curQuote\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(price)) | Collect(1);\\\"},{\\\"name\\\":\\\"yearAgo\\\",\\\"query\\\":\\\"( 100 * ( today / yearAgo - 1 ) )\\\"},{\\\"name\\\":\\\"weekAgo\\\",\\\"query\\\":\\\"( 100 * ( today / weekAgo- 1 ) )\\\"},{\\\"name\\\":\\\"sentiment\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(sentiment)) | Collect(1);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; \",\"label\":\"Explore a Stock\",\"params\":[{\"paramName\":\"search\",\"view\":false,\"model\":{\"defaultValue\":\"\"}},{\"paramName\":\"stock\",\"required\":true,\"view\":{\"displayType\":\"dropdown\",\"label\":\"Select a Stock to Explore\"},\"model\":{\"query\":\"(infinite = Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \\\"<search>\\\") | Iterate()) | Collect(50);\",\"infiniteQuery\":\"infinite | Collect(50);\",\"searchParam\":\"search\",\"dependsOn\":[\"search\",\"filterChoice\"]}}],\"execute\":\"button\"}]}","viewOptionsMap":{"default-handle":{"param":true,"json":[{"query":"## Import the Data ## API ( api_type = [ \"JSON2\" ] , aliasMap = [ { \"input_url\" : \"https://api.worldtradingdata.com/api/v1/stock?symbol=@symbol0@&api_token=@api_token1@\" , \"input_method\" : \"get\" , \"symbol\" : \"\\\"symbol\\\"\" , \"name\" : \"\\\"name\\\"\" , \"price\" : \"\\\"price\\\"\" , \"day_change\" : \"\\\"day_change\\\"\" , \"change_pct\" : \"\\\"change_pct\\\"\" , \"last_trade_time\" : \"\\\"last_trade_time\\\"\" , \"root\" : \"\\\"data\\\"[]\" } ] ) | Select ( placeholder__symbol , placeholder__name , placeholder__price , placeholder__day_change , placeholder__change_pct , placeholder__last_trade_time ) .as ( [ symbol , name , price , day_change , change_pct , last_trade_time ] ) | Filter ( symbol0 == [ \"<stock>\" ] ) | Filter ( api_token1 == [ \"z5me79EzQmlzDutKTs1gd72rW82kJAoWOOyKVM1g2RtU0L85At1R1dcKruPx\" ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME885319\" ] ) ] ) ; Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__open , WEEKLY_DATA__timestamp ) .as ( [ Symbol , open , timestamp ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME159183\" ] ) ] ) ; Frame ( FRAME885319 ) | Select ( FRAME885319__change_pct , FRAME885319__day_change , FRAME885319__last_trade_time , FRAME885319__name , FRAME885319__price , FRAME885319__symbol ) .as ( [ change_pct , day_change , last_trade_time , name , price , symbol ] ) | Merge ( joins = [ ( Symbol , inner.join , symbol ) ] , frame = [ FRAME159183 ] ) ; RemoveFrame ( \"FRAME885319\" ) ; FRAME159183 | Convert ( frameType = [ R ] ) .as ( [ 'FRAME159183' ] ) ; FRAME159183 | ChangeColumnType ( column = [ price ] , dataType = [ \"NUMBER\" ] ) ; FRAME159183 | AddColumn ( newCol = [ \"yahoo\" ] , dataType = [ \"STRING\" ] ) ; FRAME159183 | UpdateRowValues ( yahoo , \"https://finance.yahoo.com/quote/\" , Filter ( price > 0 ) ) ; FRAME159183 | JoinColumns ( newCol = [ \"yahoofinance\" ] , delimiter = [ \"\" ] , columns = [ \"yahoo\" , \"Symbol\" ] ) ; ## Search for Twitter ## Frame ( FRAME159183 ) | Select ( name ) | FlatMapLambda ( lambda = [ \"twittersearch\" ] , columns = [ \"name\" ] , params = [ { \"output\" : \"100\" , \"result_type\" : \"Mixed\" , \"geo_code\" : \"\" } ] ) | Merge ( joins = [ ( name , inner.join , name ) ] , frame = [ FRAME159183 ] ) ; ## Run Sentiment on the Tweets ## R ( \"<encode>sentimentFrame <- as.data.frame(unique(FRAME159183$review)); names(sentimentFrame) <- c(\"review\"); sentimentFrame <- score_sentiment(sentimentFrame); FRAME159183 <- merge(FRAME159183,sentimentFrame,by=\"review\"); FRAME159183 <- as.data.table(FRAME159183);  </encode>\" ) ; GenerateFrameFromRVariable(\"FRAME159183\"); ## Visualize ## Panel ( 1 ) | SetPanelView ( \"visualization\" , \"<encode>{\"type\":\"echarts\"}</encode>\" ) ; if ( ( FRAME159183 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"Average_of_open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleZoomX\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleZoomX\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"editXAxis\" : { \"title\" : { \"show\" : true , \"name\" : \"Date\" } , \"values\" : true , \"line\" : true , \"format\" : { \"type\" : \"Default\" , \"delimiter\" : \"Default\" , \"prepend\" : \"\" , \"append\" : \"\" , \"maxLength\" : 10 } , \"rotate\" : 0 , \"nameGap\" : 25 , \"min\" : { \"show\" : false } , \"max\" : { \"show\" : false } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"editYAxis\" : { \"title\" : { \"show\" : true , \"name\" : \"Stock Price\" } , \"values\" : true , \"line\" : true , \"rotate\" : 0 , \"nameGap\" : 25 , \"min\" : { \"show\" : false } , \"max\" : { \"show\" : false } , \"format\" : { \"delimiter\" : \",\" , \"prepend\" : \"$\" , \"type\" : \"Default\" , \"append\" : \"\" , \"maxLength\" : 10 } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 2 ) | SetPanelView ( \"visualization\" , \"<encode>{\"type\":\"echarts\"}</encode>\" ) ; if ( ( FRAME159183 | HasDuplicates ( name ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , Average ( sentiment ) ) .as ( [ name , Average_of_sentiment ] ) | Group ( name ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"name\" ] , \"value\" : [ \"Average_of_sentiment\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , sentiment ) .as ( [ name , sentiment ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"name\" ] , \"value\" : [ \"sentiment\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"minMax\" : { \"min\" : { \"show\" : true , \"value\" : - 1 } , \"max\" : { \"show\" : true , \"value\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \"tools\" ) ; yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2018-09-21\" ]) | Collect(1); today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-13\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-06\" ]) | Collect(1); Panel ( 4 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div class = \\\"header\\\"> <font size = \\\"5\\\" color = #fff>Tweets about {{tweets[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][2]}}</font></div>\n<div ng-repeat=\\\"item in tweets[0].output.data.values\\\" style=\\\"word-wrap: break-word; margin-right: 25px\\\">\n<div id=\\\"colorstrip\\\"></div>\n<ol class=\\\"KPI\\\">\n<li><span></span><p class = \\\"infoPiece\\\"><b>Tweet: </b>{{item[0]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Retweets: </b>{{item[1]}}</p></li>\n</ol>\n</div>\n<style>\n#TextWidget #colorstrip{\n    width: 100%; height: 2px;\n    border-style: solid;\n    border-color: #F0F0F0;\n    background-color: #F0F0F0;\n    margin-bottom: 10px;\n}\n#TextWidget .header{\n\tbackground-color: #28aae1;\n\tpadding-left: 10px;\n}\n#TextWidget ol{\n  color: #000000;\n  list-style-type: none;\n}\n#TextWidget ol li{\n  position: relative;\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\n  margin-bottom: 10px;\n  left: 5px;\n}\n#TextWidget li p.infoPiece{\n  font: 16px/1.5 Helvetica, sans-serif;\n  padding-left: 50px;\n  color: #3b4d69;\n}\n#TextWidget .KPI span{\n  position: absolute;\n}\n</style>\",\"varList\":[{\"name\":\"tweets\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(review,retweet_count,name) | Sort( columns = [ \\\"retweet_count\\\" ] , sort = [ \\\"desc\\\" ] ) | Collect(10);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; Panel ( 3 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div id=\\\"projectFacts\\\" class=\\\"sectionClass\\\">\n    <div class=\\\"fullWidth eight columns\\\">\n        <div class=\\\"projectFactsWrap \\\">\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"5\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number1\\\" class=\\\"number\\\"><a href='{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][1]}}'>{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0]}}</a></p>\n                <span></span>\n                <p>Symbol (Control + Click)</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"77\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number2\\\" class=\\\"number\\\">${{curQuote[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number:2}}</p>\n                <span></span>\n                <p>Quote ({{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][2]}})</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"1988\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number3\\\" class=\\\"number\\\">{{yearAgo[0][\\\"output\\\"] | number:1}}%</p>\n                <span></span>\n                <p>Last 12 Month Performance</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number4\\\" class=\\\"number\\\">{{weekAgo[0][\\\"output\\\"] | number: 1}}%</p>\n                <span></span>\n                <p>Last Week Performance</p>\n            </div>\n\t\t\t<div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number5\\\" class=\\\"number\\\">{{sentiment[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number: 3}}</p>\n                <span></span>\n                <p>Average Sentiment</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n\n\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\nbody{\n  font-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\n  font-size: 13px;\n  color: #3b4d69;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n}\n\n#TextWidget *{\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\n  margin: 0;\n  padding: 0;\n  font-size: 13px;\n  direction: ltr;\n}\n\n#TextWidget .sectionClass{\n  padding: 20px 0px 45px 0px;\n  position: relative;\n  display: block;\n}\n\n#TextWidget .fullWidth{\n  width: 100%;\n  display: table;\n  float: none;\n  padding: 0;\n  min-height: 1px;\n  height: 100%!;\n  position: relative;\n}\n\n\n#TextWidget .sectiontitle{\n  background-position: center;\n  margin: 0px 0 0px;\n  text-align: center;\n  min-height: 0px;\n}\n\n#TextWidget .sectiontitle h2{\n  font-size: 10px;\n  color: #FFF;\n  margin-bottom: 0px;\npadding-right: 10px;\npadding-left: 10px;\n}\n\n\n#TextWidget .headerLine{\n  width: 0px;\n  height: 0px;\n  display: inline-block;\n  background: #FFF;\n}\n\n\n#TextWidget .projectFactsWrap{\n    display: flex;\n  margin-top: 0px;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n\n#TextWidget #projectFacts .fullWidth{\n  padding: 0;\n}\n\n#TextWidget .projectFactsWrap .item{\n  width: 20%;\n  height: 100%;\n  padding: 14px 0px;\n  text-align: center;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(1){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(2){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(3){\n  background: #F0F0F0;\n}\n#TextWidget .projectFactsWrap .item:nth-child(4){\n  background: #F0F0F0;\n}\n#TextWidget .projectFactsWrap .item:nth-child(5){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(6){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item p.number{\n  font-size: 37px;\n  padding: 0;\n  font-weight: bold;\n}\n\n#TextWidget .projectFactsWrap .item p{\n  color: #143f5b;\n  font-size: 18px;\n  margin: 0;\n  padding: 8px;\n  font-family: 'Open Sans';\n}\n\n\n#TextWidget .projectFactsWrap .item span{\n  width: 60px;\n  background: #143f5b;\n  height: 2px;\n  display: block;\n  margin: 0 auto;\n}\n\n\n#TextWidget .projectFactsWrap .item i{\n  vertical-align: middle;\n  font-size: 50px;\n  color: #6c82a7;\n}\n\n\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\n  color: black;\n}\n\n#TextWidget .projectFactsWrap .item:hover span{\n  background: black;\n}\n\n#TextWidget @media (max-width: 786px){\n  .projectFactsWrap .item {\n     flex: 0 0 50%;\n  }\n#TextWidget }\n\n\n#TextWidget .trans{\n  opacity: 1;\n  -webkit-transform: translateX(0px);\n  transform: translateX(0px);\n  -webkit-transition: all 500ms ease;\n  -moz-transition: all 500ms ease;\n  transition: all 500ms ease;\n\n</style>\",\"varList\":[{\"name\":\"Symbol\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select ( Symbol,yahoofinance,last_trade_time ) | Collect ( 1 ) ;\"},{\"name\":\"yearAgoVar\",\"query\":\"yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1);\"},{\"name\":\"todayVar\",\"query\":\"today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1);\"},{\"name\":\"weekAgoVar\",\"query\":\"weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1);\"},{\"name\":\"curQuote\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(price)) | Collect(1);\"},{\"name\":\"yearAgo\",\"query\":\"( 100 * ( today / yearAgo - 1 ) )\"},{\"name\":\"weekAgo\",\"query\":\"( 100 * ( today / weekAgo- 1 ) )\"},{\"name\":\"sentiment\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(sentiment)) | Collect(1);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; ","label":"Explore a Stock","params":[{"paramName":"search","view":false,"model":{"defaultValue":""}},{"paramName":"stock","required":true,"view":{"displayType":"dropdown","label":"Select a Stock to Explore"},"model":{"query":"(infinite = Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \"<search>\") | Iterate()) | Collect(50);","infiniteQuery":"infinite | Collect(50);","searchParam":"search","dependsOn":["search","filterChoice"]}}],"execute":"button"}]}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":0.0,"left":0.0,"width":31.25,"height":30.684596577017114},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"0\" ) ;","isMeta":false,"output":{"panelId":"0","panelLabel":"Explore a Stock","view":"default-handle","viewOptions":"{\"param\":true,\"json\":[{\"query\":\"## Import the Data ## API ( api_type = [ \\\"JSON2\\\" ] , aliasMap = [ { \\\"input_url\\\" : \\\"https://api.worldtradingdata.com/api/v1/stock?symbol=@symbol0@&api_token=@api_token1@\\\" , \\\"input_method\\\" : \\\"get\\\" , \\\"symbol\\\" : \\\"\\\\\\\"symbol\\\\\\\"\\\" , \\\"name\\\" : \\\"\\\\\\\"name\\\\\\\"\\\" , \\\"price\\\" : \\\"\\\\\\\"price\\\\\\\"\\\" , \\\"day_change\\\" : \\\"\\\\\\\"day_change\\\\\\\"\\\" , \\\"change_pct\\\" : \\\"\\\\\\\"change_pct\\\\\\\"\\\" , \\\"last_trade_time\\\" : \\\"\\\\\\\"last_trade_time\\\\\\\"\\\" , \\\"root\\\" : \\\"\\\\\\\"data\\\\\\\"[]\\\" } ] ) | Select ( placeholder__symbol , placeholder__name , placeholder__price , placeholder__day_change , placeholder__change_pct , placeholder__last_trade_time ) .as ( [ symbol , name , price , day_change , change_pct , last_trade_time ] ) | Filter ( symbol0 == [ \\\"<stock>\\\" ] ) | Filter ( api_token1 == [ \\\"z5me79EzQmlzDutKTs1gd72rW82kJAoWOOyKVM1g2RtU0L85At1R1dcKruPx\\\" ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME885319\\\" ] ) ] ) ; Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__open , WEEKLY_DATA__timestamp ) .as ( [ Symbol , open , timestamp ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \\\"FRAME159183\\\" ] ) ] ) ; Frame ( FRAME885319 ) | Select ( FRAME885319__change_pct , FRAME885319__day_change , FRAME885319__last_trade_time , FRAME885319__name , FRAME885319__price , FRAME885319__symbol ) .as ( [ change_pct , day_change , last_trade_time , name , price , symbol ] ) | Merge ( joins = [ ( Symbol , inner.join , symbol ) ] , frame = [ FRAME159183 ] ) ; RemoveFrame ( \\\"FRAME885319\\\" ) ; FRAME159183 | Convert ( frameType = [ R ] ) .as ( [ 'FRAME159183' ] ) ; FRAME159183 | ChangeColumnType ( column = [ price ] , dataType = [ \\\"NUMBER\\\" ] ) ; FRAME159183 | AddColumn ( newCol = [ \\\"yahoo\\\" ] , dataType = [ \\\"STRING\\\" ] ) ; FRAME159183 | UpdateRowValues ( yahoo , \\\"https://finance.yahoo.com/quote/\\\" , Filter ( price > 0 ) ) ; FRAME159183 | JoinColumns ( newCol = [ \\\"yahoofinance\\\" ] , delimiter = [ \\\"\\\" ] , columns = [ \\\"yahoo\\\" , \\\"Symbol\\\" ] ) ; ## Search for Twitter ## Frame ( FRAME159183 ) | Select ( name ) | FlatMapLambda ( lambda = [ \\\"twittersearch\\\" ] , columns = [ \\\"name\\\" ] , params = [ { \\\"output\\\" : \\\"100\\\" , \\\"result_type\\\" : \\\"Mixed\\\" , \\\"geo_code\\\" : \\\"\\\" } ] ) | Merge ( joins = [ ( name , inner.join , name ) ] , frame = [ FRAME159183 ] ) ; ## Run Sentiment on the Tweets ## R ( \\\"<encode>sentimentFrame <- as.data.frame(unique(FRAME159183$review)); names(sentimentFrame) <- c(\\\"review\\\"); sentimentFrame <- score_sentiment(sentimentFrame); FRAME159183 <- merge(FRAME159183,sentimentFrame,by=\\\"review\\\"); FRAME159183 <- as.data.table(FRAME159183);  </encode>\\\" ) ; GenerateFrameFromRVariable(\\\"FRAME159183\\\"); ## Visualize ## Panel ( 1 ) | SetPanelView ( \\\"visualization\\\" , \\\"<encode>{\\\"type\\\":\\\"echarts\\\"}</encode>\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"Average_of_open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"1\\\" : { \\\"layout\\\" : \\\"Line\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"timestamp\\\" ] , \\\"value\\\" : [ \\\"open\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"toggleZoomX\\\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools.shared.toggleZoomX\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editXAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Date\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"format\\\" : { \\\"type\\\" : \\\"Default\\\" , \\\"delimiter\\\" : \\\"Default\\\" , \\\"prepend\\\" : \\\"\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"editYAxis\\\" : { \\\"title\\\" : { \\\"show\\\" : true , \\\"name\\\" : \\\"Stock Price\\\" } , \\\"values\\\" : true , \\\"line\\\" : true , \\\"rotate\\\" : 0 , \\\"nameGap\\\" : 25 , \\\"min\\\" : { \\\"show\\\" : false } , \\\"max\\\" : { \\\"show\\\" : false } , \\\"format\\\" : { \\\"delimiter\\\" : \\\",\\\" , \\\"prepend\\\" : \\\"$\\\" , \\\"type\\\" : \\\"Default\\\" , \\\"append\\\" : \\\"\\\" , \\\"maxLength\\\" : 10 } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; Panel ( 2 ) | SetPanelView ( \\\"visualization\\\" , \\\"<encode>{\\\"type\\\":\\\"echarts\\\"}</encode>\\\" ) ; if ( ( FRAME159183 | HasDuplicates ( name ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , Average ( sentiment ) ) .as ( [ name , Average_of_sentiment ] ) | Group ( name ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"Average_of_sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , sentiment ) .as ( [ name , sentiment ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \\\"2\\\" : { \\\"layout\\\" : \\\"Gauge\\\" , \\\"alignment\\\" : { \\\"label\\\" : [ \\\"name\\\" ] , \\\"value\\\" : [ \\\"sentiment\\\" ] , \\\"tooltip\\\" : [ ] , \\\"facet\\\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \\\"tools\\\" : { \\\"shared\\\" : { \\\"minMax\\\" : { \\\"min\\\" : { \\\"show\\\" : true , \\\"value\\\" : - 1 } , \\\"max\\\" : { \\\"show\\\" : true , \\\"value\\\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \\\"tools\\\" ) ; yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1); today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1); Panel ( 4 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div class = \\\\\\\"header\\\\\\\"> <font size = \\\\\\\"5\\\\\\\" color = #fff>Tweets about {{tweets[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}}</font></div>\\n<div ng-repeat=\\\\\\\"item in tweets[0].output.data.values\\\\\\\" style=\\\\\\\"word-wrap: break-word; margin-right: 25px\\\\\\\">\\n<div id=\\\\\\\"colorstrip\\\\\\\"></div>\\n<ol class=\\\\\\\"KPI\\\\\\\">\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Tweet: </b>{{item[0]}}</p></li>\\n<li><span></span><p class = \\\\\\\"infoPiece\\\\\\\"><b>Retweets: </b>{{item[1]}}</p></li>\\n</ol>\\n</div>\\n<style>\\n#TextWidget #colorstrip{\\n    width: 100%; height: 2px;\\n    border-style: solid;\\n    border-color: #F0F0F0;\\n    background-color: #F0F0F0;\\n    margin-bottom: 10px;\\n}\\n#TextWidget .header{\\n\\tbackground-color: #28aae1;\\n\\tpadding-left: 10px;\\n}\\n#TextWidget ol{\\n  color: #000000;\\n  list-style-type: none;\\n}\\n#TextWidget ol li{\\n  position: relative;\\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\\n  margin-bottom: 10px;\\n  left: 5px;\\n}\\n#TextWidget li p.infoPiece{\\n  font: 16px/1.5 Helvetica, sans-serif;\\n  padding-left: 50px;\\n  color: #3b4d69;\\n}\\n#TextWidget .KPI span{\\n  position: absolute;\\n}\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"tweets\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(review,retweet_count,name) | Sort( columns = [ \\\\\\\"retweet_count\\\\\\\" ] , sort = [ \\\\\\\"desc\\\\\\\" ] ) | Collect(10);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; Panel ( 3 ) | SetPanelView ( \\\"text-widget\\\" , \\\"<encode>{\\\"html\\\":\\\"<div id=\\\\\\\"projectFacts\\\\\\\" class=\\\\\\\"sectionClass\\\\\\\">\\n    <div class=\\\\\\\"fullWidth eight columns\\\\\\\">\\n        <div class=\\\\\\\"projectFactsWrap \\\\\\\">\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"5\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number1\\\\\\\" class=\\\\\\\"number\\\\\\\"><a href='{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][1]}}'>{{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0]}}</a></p>\\n                <span></span>\\n                <p>Symbol (Control + Click)</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"77\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number2\\\\\\\" class=\\\\\\\"number\\\\\\\">${{curQuote[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number:2}}</p>\\n                <span></span>\\n                <p>Quote ({{Symbol[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][2]}})</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"1988\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number3\\\\\\\" class=\\\\\\\"number\\\\\\\">{{yearAgo[0][\\\\\\\"output\\\\\\\"] | number:1}}%</p>\\n                <span></span>\\n                <p>Last 12 Month Performance</p>\\n            </div>\\n            <div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number4\\\\\\\" class=\\\\\\\"number\\\\\\\">{{weekAgo[0][\\\\\\\"output\\\\\\\"] | number: 1}}%</p>\\n                <span></span>\\n                <p>Last Week Performance</p>\\n            </div>\\n\\t\\t\\t<div class=\\\\\\\"item wow fadeInUpBig animated animated\\\\\\\" data-number=\\\\\\\"14,367,000\\\\\\\" style=\\\\\\\"visibility: visible;\\\\\\\">\\n                <p id=\\\\\\\"number5\\\\\\\" class=\\\\\\\"number\\\\\\\">{{sentiment[0][\\\\\\\"output\\\\\\\"][\\\\\\\"data\\\\\\\"][\\\\\\\"values\\\\\\\"][0][0] | number: 3}}</p>\\n                <span></span>\\n                <p>Average Sentiment</p>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<style>\\n\\n\\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\\nbody{\\n  font-family: Open Sans, \\\\\\\"Helvetica Neue\\\\\\\", \\\\\\\"Helvetica\\\\\\\", Helvetica, Arial,   sans-serif;\\n  font-size: 13px;\\n  color: #3b4d69;\\n  position: relative;\\n  -webkit-font-smoothing: antialiased;\\n  margin: 0;\\n}\\n\\n#TextWidget *{\\n  -webkit-box-sizing: border-box;\\n  -moz-box-sizing: border-box;\\n  box-sizing: border-box;\\n}\\n\\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\\n  margin: 0;\\n  padding: 0;\\n  font-size: 13px;\\n  direction: ltr;\\n}\\n\\n#TextWidget .sectionClass{\\n  padding: 20px 0px 45px 0px;\\n  position: relative;\\n  display: block;\\n}\\n\\n#TextWidget .fullWidth{\\n  width: 100%;\\n  display: table;\\n  float: none;\\n  padding: 0;\\n  min-height: 1px;\\n  height: 100%!;\\n  position: relative;\\n}\\n\\n\\n#TextWidget .sectiontitle{\\n  background-position: center;\\n  margin: 0px 0 0px;\\n  text-align: center;\\n  min-height: 0px;\\n}\\n\\n#TextWidget .sectiontitle h2{\\n  font-size: 10px;\\n  color: #FFF;\\n  margin-bottom: 0px;\\npadding-right: 10px;\\npadding-left: 10px;\\n}\\n\\n\\n#TextWidget .headerLine{\\n  width: 0px;\\n  height: 0px;\\n  display: inline-block;\\n  background: #FFF;\\n}\\n\\n\\n#TextWidget .projectFactsWrap{\\n    display: flex;\\n  margin-top: 0px;\\n  flex-direction: row;\\n  flex-wrap: wrap;\\n}\\n\\n\\n#TextWidget #projectFacts .fullWidth{\\n  padding: 0;\\n}\\n\\n#TextWidget .projectFactsWrap .item{\\n  width: 20%;\\n  height: 100%;\\n  padding: 14px 0px;\\n  text-align: center;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(1){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(2){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(3){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(4){\\n  background: #F0F0F0;\\n}\\n#TextWidget .projectFactsWrap .item:nth-child(5){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item:nth-child(6){\\n  background: #F0F0F0;\\n}\\n\\n#TextWidget .projectFactsWrap .item p.number{\\n  font-size: 37px;\\n  padding: 0;\\n  font-weight: bold;\\n}\\n\\n#TextWidget .projectFactsWrap .item p{\\n  color: #143f5b;\\n  font-size: 18px;\\n  margin: 0;\\n  padding: 8px;\\n  font-family: 'Open Sans';\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item span{\\n  width: 60px;\\n  background: #143f5b;\\n  height: 2px;\\n  display: block;\\n  margin: 0 auto;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item i{\\n  vertical-align: middle;\\n  font-size: 50px;\\n  color: #6c82a7;\\n}\\n\\n\\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\\n  color: black;\\n}\\n\\n#TextWidget .projectFactsWrap .item:hover span{\\n  background: black;\\n}\\n\\n#TextWidget @media (max-width: 786px){\\n  .projectFactsWrap .item {\\n     flex: 0 0 50%;\\n  }\\n#TextWidget }\\n\\n\\n#TextWidget .trans{\\n  opacity: 1;\\n  -webkit-transform: translateX(0px);\\n  transform: translateX(0px);\\n  -webkit-transition: all 500ms ease;\\n  -moz-transition: all 500ms ease;\\n  transition: all 500ms ease;\\n\\n</style>\\\",\\\"varList\\\":[{\\\"name\\\":\\\"Symbol\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select ( Symbol,yahoofinance,last_trade_time ) | Collect ( 1 ) ;\\\"},{\\\"name\\\":\\\"yearAgoVar\\\",\\\"query\\\":\\\"yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2018-09-21\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"todayVar\\\",\\\"query\\\":\\\"today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-13\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"weekAgoVar\\\",\\\"query\\\":\\\"weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\\\\\"2019-09-06\\\\\\\" ]) | Collect(1);\\\"},{\\\"name\\\":\\\"curQuote\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(price)) | Collect(1);\\\"},{\\\"name\\\":\\\"yearAgo\\\",\\\"query\\\":\\\"( 100 * ( today / yearAgo - 1 ) )\\\"},{\\\"name\\\":\\\"weekAgo\\\",\\\"query\\\":\\\"( 100 * ( today / weekAgo- 1 ) )\\\"},{\\\"name\\\":\\\"sentiment\\\",\\\"query\\\":\\\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(sentiment)) | Collect(1);\\\"}],\\\"freeze\\\":false,\\\"loading\\\":true}</encode>\\\" ) ; \",\"label\":\"Explore a Stock\",\"params\":[{\"paramName\":\"search\",\"view\":false,\"model\":{\"defaultValue\":\"\"}},{\"paramName\":\"stock\",\"required\":true,\"view\":{\"displayType\":\"dropdown\",\"label\":\"Select a Stock to Explore\"},\"model\":{\"query\":\"(infinite = Database ( database = [ \\\"911bf0e9-0378-45bd-9461-87238e9d3b2f\\\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \\\"<search>\\\") | Iterate()) | Collect(50);\",\"infiniteQuery\":\"infinite | Collect(50);\",\"searchParam\":\"search\",\"dependsOn\":[\"search\",\"filterChoice\"]}}],\"execute\":\"button\"}]}","viewOptionsMap":{"default-handle":{"param":true,"json":[{"query":"## Import the Data ## API ( api_type = [ \"JSON2\" ] , aliasMap = [ { \"input_url\" : \"https://api.worldtradingdata.com/api/v1/stock?symbol=@symbol0@&api_token=@api_token1@\" , \"input_method\" : \"get\" , \"symbol\" : \"\\\"symbol\\\"\" , \"name\" : \"\\\"name\\\"\" , \"price\" : \"\\\"price\\\"\" , \"day_change\" : \"\\\"day_change\\\"\" , \"change_pct\" : \"\\\"change_pct\\\"\" , \"last_trade_time\" : \"\\\"last_trade_time\\\"\" , \"root\" : \"\\\"data\\\"[]\" } ] ) | Select ( placeholder__symbol , placeholder__name , placeholder__price , placeholder__day_change , placeholder__change_pct , placeholder__last_trade_time ) .as ( [ symbol , name , price , day_change , change_pct , last_trade_time ] ) | Filter ( symbol0 == [ \"<stock>\" ] ) | Filter ( api_token1 == [ \"z5me79EzQmlzDutKTs1gd72rW82kJAoWOOyKVM1g2RtU0L85At1R1dcKruPx\" ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME885319\" ] ) ] ) ; Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol , WEEKLY_DATA__open , WEEKLY_DATA__timestamp ) .as ( [ Symbol , open , timestamp ] ) | Import ( frame = [ CreateFrame ( frameType = [ GRID ] , override = [ false ] ) .as ( [ \"FRAME159183\" ] ) ] ) ; Frame ( FRAME885319 ) | Select ( FRAME885319__change_pct , FRAME885319__day_change , FRAME885319__last_trade_time , FRAME885319__name , FRAME885319__price , FRAME885319__symbol ) .as ( [ change_pct , day_change , last_trade_time , name , price , symbol ] ) | Merge ( joins = [ ( Symbol , inner.join , symbol ) ] , frame = [ FRAME159183 ] ) ; RemoveFrame ( \"FRAME885319\" ) ; FRAME159183 | Convert ( frameType = [ R ] ) .as ( [ 'FRAME159183' ] ) ; FRAME159183 | ChangeColumnType ( column = [ price ] , dataType = [ \"NUMBER\" ] ) ; FRAME159183 | AddColumn ( newCol = [ \"yahoo\" ] , dataType = [ \"STRING\" ] ) ; FRAME159183 | UpdateRowValues ( yahoo , \"https://finance.yahoo.com/quote/\" , Filter ( price > 0 ) ) ; FRAME159183 | JoinColumns ( newCol = [ \"yahoofinance\" ] , delimiter = [ \"\" ] , columns = [ \"yahoo\" , \"Symbol\" ] ) ; ## Search for Twitter ## Frame ( FRAME159183 ) | Select ( name ) | FlatMapLambda ( lambda = [ \"twittersearch\" ] , columns = [ \"name\" ] , params = [ { \"output\" : \"100\" , \"result_type\" : \"Mixed\" , \"geo_code\" : \"\" } ] ) | Merge ( joins = [ ( name , inner.join , name ) ] , frame = [ FRAME159183 ] ) ; ## Run Sentiment on the Tweets ## R ( \"<encode>sentimentFrame <- as.data.frame(unique(FRAME159183$review)); names(sentimentFrame) <- c(\"review\"); sentimentFrame <- score_sentiment(sentimentFrame); FRAME159183 <- merge(FRAME159183,sentimentFrame,by=\"review\"); FRAME159183 <- as.data.table(FRAME159183);  </encode>\" ) ; GenerateFrameFromRVariable(\"FRAME159183\"); ## Visualize ## Panel ( 1 ) | SetPanelView ( \"visualization\" , \"<encode>{\"type\":\"echarts\"}</encode>\" ) ; if ( ( FRAME159183 | HasDuplicates ( timestamp ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , Average ( open ) ) .as ( [ timestamp , Average_of_open ] ) | Group ( timestamp ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"Average_of_open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( timestamp , open ) .as ( [ timestamp , open ] ) | With ( Panel ( 1 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"1\" : { \"layout\" : \"Line\" , \"alignment\" : { \"label\" : [ \"timestamp\" ] , \"value\" : [ \"open\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ; ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"toggleZoomX\" : true } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools.shared.toggleZoomX\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"editXAxis\" : { \"title\" : { \"show\" : true , \"name\" : \"Date\" } , \"values\" : true , \"line\" : true , \"format\" : { \"type\" : \"Default\" , \"delimiter\" : \"Default\" , \"prepend\" : \"\" , \"append\" : \"\" , \"maxLength\" : 10 } , \"rotate\" : 0 , \"nameGap\" : 25 , \"min\" : { \"show\" : false } , \"max\" : { \"show\" : false } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 1 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"editYAxis\" : { \"title\" : { \"show\" : true , \"name\" : \"Stock Price\" } , \"values\" : true , \"line\" : true , \"rotate\" : 0 , \"nameGap\" : 25 , \"min\" : { \"show\" : false } , \"max\" : { \"show\" : false } , \"format\" : { \"delimiter\" : \",\" , \"prepend\" : \"$\" , \"type\" : \"Default\" , \"append\" : \"\" , \"maxLength\" : 10 } } } } } ) ; Panel ( 1 ) | RetrievePanelOrnaments ( \"tools\" ) ; Panel ( 2 ) | SetPanelView ( \"visualization\" , \"<encode>{\"type\":\"echarts\"}</encode>\" ) ; if ( ( FRAME159183 | HasDuplicates ( name ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , Average ( sentiment ) ) .as ( [ name , Average_of_sentiment ] ) | Group ( name ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"name\" ] , \"value\" : [ \"Average_of_sentiment\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) , ( Frame ( frame = [ FRAME159183 ] ) | Select ( name , sentiment ) .as ( [ name , sentiment ] ) | With ( Panel ( 2 ) ) | Format ( type = [ 'table' ] ) | TaskOptions ( { \"2\" : { \"layout\" : \"Gauge\" , \"alignment\" : { \"label\" : [ \"name\" ] , \"value\" : [ \"sentiment\" ] , \"tooltip\" : [ ] , \"facet\" : [ ] } } } ) | Collect ( 2000 ) ) ) ;  Panel ( 2 ) | AddPanelOrnaments ( { \"tools\" : { \"shared\" : { \"minMax\" : { \"min\" : { \"show\" : true , \"value\" : - 1 } , \"max\" : { \"show\" : true , \"value\" : 1 } } } } } ) ; Panel ( 2 ) | RetrievePanelOrnaments ( \"tools\" ) ; yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2018-09-21\" ]) | Collect(1); today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-13\" ]) | Collect(1); weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \"2019-09-06\" ]) | Collect(1); Panel ( 4 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div class = \\\"header\\\"> <font size = \\\"5\\\" color = #fff>Tweets about {{tweets[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][2]}}</font></div>\n<div ng-repeat=\\\"item in tweets[0].output.data.values\\\" style=\\\"word-wrap: break-word; margin-right: 25px\\\">\n<div id=\\\"colorstrip\\\"></div>\n<ol class=\\\"KPI\\\">\n<li><span></span><p class = \\\"infoPiece\\\"><b>Tweet: </b>{{item[0]}}</p></li>\n<li><span></span><p class = \\\"infoPiece\\\"><b>Retweets: </b>{{item[1]}}</p></li>\n</ol>\n</div>\n<style>\n#TextWidget #colorstrip{\n    width: 100%; height: 2px;\n    border-style: solid;\n    border-color: #F0F0F0;\n    background-color: #F0F0F0;\n    margin-bottom: 10px;\n}\n#TextWidget .header{\n\tbackground-color: #28aae1;\n\tpadding-left: 10px;\n}\n#TextWidget ol{\n  color: #000000;\n  list-style-type: none;\n}\n#TextWidget ol li{\n  position: relative;\n  font: bold italic 16px/1.5 Helvetica, Verdana, sans-serif;\n  margin-bottom: 10px;\n  left: 5px;\n}\n#TextWidget li p.infoPiece{\n  font: 16px/1.5 Helvetica, sans-serif;\n  padding-left: 50px;\n  color: #3b4d69;\n}\n#TextWidget .KPI span{\n  position: absolute;\n}\n</style>\",\"varList\":[{\"name\":\"tweets\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(review,retweet_count,name) | Sort( columns = [ \\\"retweet_count\\\" ] , sort = [ \\\"desc\\\" ] ) | Collect(10);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; Panel ( 3 ) | SetPanelView ( \"text-widget\" , \"<encode>{\"html\":\"<div id=\\\"projectFacts\\\" class=\\\"sectionClass\\\">\n    <div class=\\\"fullWidth eight columns\\\">\n        <div class=\\\"projectFactsWrap \\\">\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"5\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number1\\\" class=\\\"number\\\"><a href='{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][1]}}'>{{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0]}}</a></p>\n                <span></span>\n                <p>Symbol (Control + Click)</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"77\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number2\\\" class=\\\"number\\\">${{curQuote[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number:2}}</p>\n                <span></span>\n                <p>Quote ({{Symbol[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][2]}})</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"1988\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number3\\\" class=\\\"number\\\">{{yearAgo[0][\\\"output\\\"] | number:1}}%</p>\n                <span></span>\n                <p>Last 12 Month Performance</p>\n            </div>\n            <div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number4\\\" class=\\\"number\\\">{{weekAgo[0][\\\"output\\\"] | number: 1}}%</p>\n                <span></span>\n                <p>Last Week Performance</p>\n            </div>\n\t\t\t<div class=\\\"item wow fadeInUpBig animated animated\\\" data-number=\\\"14,367,000\\\" style=\\\"visibility: visible;\\\">\n                <p id=\\\"number5\\\" class=\\\"number\\\">{{sentiment[0][\\\"output\\\"][\\\"data\\\"][\\\"values\\\"][0][0] | number: 3}}</p>\n                <span></span>\n                <p>Average Sentiment</p>\n            </div>\n        </div>\n    </div>\n</div>\n\n<style>\n\n\n#TextWidget @import url(https://fonts.googleapis.com/css?family=PT+Sans+Narrow);\nbody{\n  font-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\n  font-size: 13px;\n  color: #3b4d69;\n  position: relative;\n  -webkit-font-smoothing: antialiased;\n  margin: 0;\n}\n\n#TextWidget *{\n  -webkit-box-sizing: border-box;\n  -moz-box-sizing: border-box;\n  box-sizing: border-box;\n}\n\n#TextWidget body, #TextWidget div, #TextWidget dl, #TextWidget dt, #TextWidget dd, #TextWidget ul, #TextWidget ol, #TextWidget li, #TextWidget h1, #TextWidget h2, #TextWidget h3, #TextWidget h4, #TextWidget h5, #TextWidget h6, #TextWidget pre, #TextWidget form, #TextWidget p, #TextWidget blockquote, #TextWidget th, #TextWidget td{\n  margin: 0;\n  padding: 0;\n  font-size: 13px;\n  direction: ltr;\n}\n\n#TextWidget .sectionClass{\n  padding: 20px 0px 45px 0px;\n  position: relative;\n  display: block;\n}\n\n#TextWidget .fullWidth{\n  width: 100%;\n  display: table;\n  float: none;\n  padding: 0;\n  min-height: 1px;\n  height: 100%!;\n  position: relative;\n}\n\n\n#TextWidget .sectiontitle{\n  background-position: center;\n  margin: 0px 0 0px;\n  text-align: center;\n  min-height: 0px;\n}\n\n#TextWidget .sectiontitle h2{\n  font-size: 10px;\n  color: #FFF;\n  margin-bottom: 0px;\npadding-right: 10px;\npadding-left: 10px;\n}\n\n\n#TextWidget .headerLine{\n  width: 0px;\n  height: 0px;\n  display: inline-block;\n  background: #FFF;\n}\n\n\n#TextWidget .projectFactsWrap{\n    display: flex;\n  margin-top: 0px;\n  flex-direction: row;\n  flex-wrap: wrap;\n}\n\n\n#TextWidget #projectFacts .fullWidth{\n  padding: 0;\n}\n\n#TextWidget .projectFactsWrap .item{\n  width: 20%;\n  height: 100%;\n  padding: 14px 0px;\n  text-align: center;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(1){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(2){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(3){\n  background: #F0F0F0;\n}\n#TextWidget .projectFactsWrap .item:nth-child(4){\n  background: #F0F0F0;\n}\n#TextWidget .projectFactsWrap .item:nth-child(5){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item:nth-child(6){\n  background: #F0F0F0;\n}\n\n#TextWidget .projectFactsWrap .item p.number{\n  font-size: 37px;\n  padding: 0;\n  font-weight: bold;\n}\n\n#TextWidget .projectFactsWrap .item p{\n  color: #143f5b;\n  font-size: 18px;\n  margin: 0;\n  padding: 8px;\n  font-family: 'Open Sans';\n}\n\n\n#TextWidget .projectFactsWrap .item span{\n  width: 60px;\n  background: #143f5b;\n  height: 2px;\n  display: block;\n  margin: 0 auto;\n}\n\n\n#TextWidget .projectFactsWrap .item i{\n  vertical-align: middle;\n  font-size: 50px;\n  color: #6c82a7;\n}\n\n\n#TextWidget .projectFactsWrap .item:hover i, #TextWidget .projectFactsWrap .item:hover p{\n  color: black;\n}\n\n#TextWidget .projectFactsWrap .item:hover span{\n  background: black;\n}\n\n#TextWidget @media (max-width: 786px){\n  .projectFactsWrap .item {\n     flex: 0 0 50%;\n  }\n#TextWidget }\n\n\n#TextWidget .trans{\n  opacity: 1;\n  -webkit-transform: translateX(0px);\n  transform: translateX(0px);\n  -webkit-transition: all 500ms ease;\n  -moz-transition: all 500ms ease;\n  transition: all 500ms ease;\n\n</style>\",\"varList\":[{\"name\":\"Symbol\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select ( Symbol,yahoofinance,last_trade_time ) | Collect ( 1 ) ;\"},{\"name\":\"yearAgoVar\",\"query\":\"yearAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2018-09-21\\\" ]) | Collect(1);\"},{\"name\":\"todayVar\",\"query\":\"today = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-13\\\" ]) | Collect(1);\"},{\"name\":\"weekAgoVar\",\"query\":\"weekAgo = Frame ( frame = [ FRAME159183 ] ) | Select(Average(open)) | Filter(timestamp == [ \\\"2019-09-06\\\" ]) | Collect(1);\"},{\"name\":\"curQuote\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(price)) | Collect(1);\"},{\"name\":\"yearAgo\",\"query\":\"( 100 * ( today / yearAgo - 1 ) )\"},{\"name\":\"weekAgo\",\"query\":\"( 100 * ( today / weekAgo- 1 ) )\"},{\"name\":\"sentiment\",\"query\":\"Frame ( frame = [ FRAME159183 ] ) | Select(Average(sentiment)) | Collect(1);\"}],\"freeze\":false,\"loading\":true}</encode>\" ) ; ","label":"Explore a Stock","params":[{"paramName":"search","view":false,"model":{"defaultValue":""}},{"paramName":"stock","required":true,"view":{"displayType":"dropdown","label":"Select a Stock to Explore"},"model":{"query":"(infinite = Database ( database = [ \"911bf0e9-0378-45bd-9461-87238e9d3b2f\" ] ) | Select ( WEEKLY_DATA__Symbol ) | Filter(WEEKLY_DATA__Symbol ?like \"<search>\") | Iterate()) | Collect(50);","infiniteQuery":"infinite | Collect(50);","searchParam":"search","dependsOn":["search","filterChoice"]}}],"execute":"button"}]}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":0.0,"left":0.0,"width":31.25,"height":30.684596577017114},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"1\" ) ;","isMeta":false,"output":{"panelId":"1","panelLabel":"Line Chart of Stock Price","view":"text-widget","viewOptions":"{\"html\":\"<br>\\n<br>\\n<div class =\\\"mainKPI2\\\">\\n    <font color=\\\"#28aae1\\\">Select a Stock to See Historical Performance</font>\\n</div>\\n\\n<style>\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\tfont-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n</style>\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}","viewOptionsMap":{"text-widget":{"html":"<br>\n<br>\n<div class =\"mainKPI2\">\n    <font color=\"#28aae1\">Select a Stock to See Historical Performance</font>\n</div>\n\n<style>\n#TextWidget .mainKPI2{\n\tmargin: 0 auto;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align:center;\n\tfont-family: Open Sans, \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial,   sans-serif;\n\tfont-size: 20px;\n\tfont-weight: normal;\n}\n</style>","varList":[{"name":"","query":""}],"freeze":false,"loading":true}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{"onSingleClick":{"Unfilter":[{"disabledVisuals":["Grid","Sunburst"],"default":true,"query":"(<Frame> | UnfilterFrame(<SelectedColumn>));","options":{},"refresh":false,"disabled":false,"panel":""}]},"onBrush":{"Filter":[{"default":true,"query":"if((IsEmpty(<SelectedValues>)),(<Frame> | UnfilterFrame(<SelectedColumn>)), (<Frame> | SetFrameFilter(<SelectedColumn>==<SelectedValues>)));","options":{},"refresh":false,"disabled":false,"panel":""}]}},"comments":{},"position":{"top":30.929095354523227,"left":0.0,"width":31.197916666666664,"height":69.07090464547677},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"2\" ) ;","isMeta":false,"output":{"panelId":"2","panelLabel":"Gauge of Sentiment","view":"text-widget","viewOptions":"{\"html\":\"<br>\\n<br>\\n<div class =\\\"mainKPI2\\\">\\n    <font color=\\\"#28aae1\\\">Select a Stock to See Twitter Sentiment</font>\\n</div>\\n\\n<style>\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\tfont-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n</style>\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}","viewOptionsMap":{"text-widget":{"html":"<br>\n<br>\n<div class =\"mainKPI2\">\n    <font color=\"#28aae1\">Select a Stock to See Twitter Sentiment</font>\n</div>\n\n<style>\n#TextWidget .mainKPI2{\n\tmargin: 0 auto;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align:center;\n\tfont-family: Open Sans, \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial,   sans-serif;\n\tfont-size: 20px;\n\tfont-weight: normal;\n}\n</style>","varList":[{"name":"","query":""}],"freeze":false,"loading":true}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":38.63080684596577,"left":66.61458333333333,"width":33.33333333333333,"height":61.36919315403423},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"3\" ) ;","isMeta":false,"output":{"panelId":"3","panelLabel":"KPIs","view":"text-widget","viewOptions":"{\"html\":\"<br>\\n<br>\\n<div class =\\\"mainKPI2\\\">\\n    <font color=\\\"#28aae1\\\">Select a Stock to See Key Metrics</font>\\n</div>\\n\\n<style>\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\tfont-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n</style>\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}","viewOptionsMap":{"text-widget":{"html":"<br>\n<br>\n<div class =\"mainKPI2\">\n    <font color=\"#28aae1\">Select a Stock to See Key Metrics</font>\n</div>\n\n<style>\n#TextWidget .mainKPI2{\n\tmargin: 0 auto;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align:center;\n\tfont-family: Open Sans, \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial,   sans-serif;\n\tfont-size: 20px;\n\tfont-weight: normal;\n}\n</style>","varList":[{"name":"","query":""}],"freeze":false,"loading":true}},"config":{"backgroundColor":"#F0F0F0","opacity":100.0,"type":"STANDARD","labelOverride":false,"zIndex":1.0},"ornaments":{"tools":{"shared":{"backgroundColor":"#F0F0F0","watermark":""}}},"events":{},"comments":{},"position":{"top":0.0,"left":31.25,"width":68.69791666666667,"height":38.386308068459655},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]},{"pixelExpression":"CachedPanel ( \"4\" ) ;","isMeta":false,"output":{"panelId":"4","panelLabel":"Tweets","view":"text-widget","viewOptions":"{\"html\":\"<br>\\n<br>\\n<div class =\\\"mainKPI2\\\">\\n    <font color=\\\"#28aae1\\\">Select a Stock to See Related Tweets</font>\\n</div>\\n\\n<style>\\n#TextWidget .mainKPI2{\\n\\tmargin: 0 auto;\\n\\tmargin-left: auto;\\n\\tmargin-right: auto;\\n\\ttext-align:center;\\n\\tfont-family: Open Sans, \\\"Helvetica Neue\\\", \\\"Helvetica\\\", Helvetica, Arial,   sans-serif;\\n\\tfont-size: 20px;\\n\\tfont-weight: normal;\\n}\\n</style>\",\"varList\":[{\"name\":\"\",\"query\":\"\"}],\"freeze\":false,\"loading\":true}","viewOptionsMap":{"text-widget":{"html":"<br>\n<br>\n<div class =\"mainKPI2\">\n    <font color=\"#28aae1\">Select a Stock to See Related Tweets</font>\n</div>\n\n<style>\n#TextWidget .mainKPI2{\n\tmargin: 0 auto;\n\tmargin-left: auto;\n\tmargin-right: auto;\n\ttext-align:center;\n\tfont-family: Open Sans, \"Helvetica Neue\", \"Helvetica\", Helvetica, Arial,   sans-serif;\n\tfont-size: 20px;\n\tfont-weight: normal;\n}\n</style>","varList":[{"name":"","query":""}],"freeze":false,"loading":true}},"config":{"type":"STANDARD","opacity":100.0,"labelOverride":false},"ornaments":{},"events":{},"comments":{},"position":{"top":38.63080684596577,"left":31.197916666666664,"width":35.46875,"height":61.36919315403423},"filters":[],"order":[],"cbv":[]},"operationType":["CACHED_PANEL"]}]}